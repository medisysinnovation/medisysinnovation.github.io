(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[1],{Rsk4:function(e,n,r){"use strict";r.r(n);var t=r("9og8"),o=r("WmNS"),s=r.n(o),a=r("rlch"),i="import React from 'react';\n\nimport { JobStatusTag } from '@medisys/component';\n// import '@medisys/component/dist/@medisys/component.css';\nexport default function() {\n  const btnConfig = {\n    variant: 'contained',\n    color: 'secondary',\n  };\n  return (\n    <div>\n      <JobStatusTag status=\"New\" />\n    </div>\n  );\n}",c="import React from 'react';\n\nimport { abc } from '@medisys/test';\nimport { Button } from '@medisys/component';\nimport { Input } from 'antd';\n\nexport default function() {\n  return (\n    <div>\n      <Input id=\"input-test\" style={{ width: 300, marginRight: 10 }} />\n      <Button\n        type=\"primary\"\n        onClick={() => {\n          abc(document.getElementById('input-test').value);\n        }}\n      >\n        Test\n      </Button>\n    </div>\n  );\n}",d="import React from 'react';\nimport { MIConfig } from '@medisys/utils';\nimport { Button } from '@medisys/component';\n\nconst { ProgressButton } = Button;\n\nexport default function() {\n  const updateLoading = status => {\n    MIConfig.updateState({\n      loading: {\n        models: {\n          somename: status,\n        },\n      },\n    });\n  };\n  return (\n    <div>\n      <ProgressButton\n        model=\"somename\"\n        onClick={() => {\n          updateLoading(true);\n          setTimeout(() => {\n            updateLoading(false);\n          }, 5000);\n        }}\n      >\n        Async Call\n      </ProgressButton>\n      <ProgressButton loading>Forever loading</ProgressButton>\n    </div>\n  );\n}",l="import React, { useEffect, useState, useMemo, useRef } from 'react';\nimport { Input, ConfigProvider } from 'antd';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport {\n  Form,\n  Button,\n  Modal,\n  Select,\n  ProSelect,\n  ProForm,\n} from '@medisys/component';\nimport { MIConfig, sleep } from '@medisys/utils';\n// console.dir(ConfigProvider);\n// console.dir(ConfigProvider.ConfigContext.Consumer);\n\nconst codeLoading = {};\n\nMIConfig.setConfig({\n  cache: false,\n  dataLoader: async ({ code }) => {\n    // console.log(code);\n\n    if (codeLoading[code]) {\n      return;\n    }\n    console.log(code + ' start');\n    codeLoading[code] = true;\n    await sleep(3000);\n    console.log(code + ' end');\n    delete codeLoading[code];\n    return test_data[code];\n  },\n});\n// Select.config.loader({\n//   loader: async ({ code }) => {\n//     if (codeLoading[code]) {\n//       return;\n//     }\n//     console.log(code + ' start');\n//     codeLoading[code] = true;\n//     await sleep(10000);\n//     console.log(code + ' end');\n//     delete codeLoading[code];\n\n//     MIConfig.updateState({\n//       dataSource: {\n//         [code]: users,\n//       },\n//     });\n//   },\n// });\n\nconst test_data = {\n  users: [\n    { value: 1, label: 'U_ABC', roleId: 1 },\n    { value: 2, label: 'U_CDE', roleId: 1 },\n    { value: 3, label: 'U_FGH', roleId: 1 },\n    { value: 4, label: 'U_EDS', roleId: 1 },\n    { value: 5, label: 'U_ANI', roleId: 1 },\n    { value: 6, label: 'U_LIT', roleId: 2 },\n    { value: 7, label: 'U_RVS', roleId: 2 },\n    { value: 8, label: 'U_UIJ', roleId: 2 },\n  ],\n  roles: [\n    { value: 1, label: 'R_ABC' },\n    { value: 2, label: 'R_CDE' },\n  ],\n};\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\ninterface T2 {\n  value: string;\n  label: string;\n}\n\nconst request = async (\n  // \u7b2c\u4e00\u4e2a\u53c2\u6570 params \u67e5\u8be2\u8868\u5355\u548c params \u53c2\u6570\u7684\u7ed3\u5408\n  // \u7b2c\u4e00\u4e2a\u53c2\u6570\u4e2d\u4e00\u5b9a\u4f1a\u6709 pageSize \u548c  current \uff0c\u8fd9\u4e24\u4e2a\u53c2\u6570\u662f antd \u7684\u89c4\u8303\n  params: {\n    pageSize: number;\n    current: number;\n  },\n  sort,\n  filter,\n) => {\n  return new Promise(resolve => {\n    resolve({\n      data: [{ value: 1, label: 123 }],\n\n      success: true,\n      total: 123,\n    });\n  });\n};\nconst DataSelectDemo = () => {\n  const [v, setV] = useState(0);\n  const myRef = React.useRef();\n  const [ds, setDs] = useState([]);\n  useEffect(() => {\n    console.log(myRef);\n    setTimeout(() => {\n      setDs([\n        { value: 1, label: 'U_ABC', roleId: 1 },\n        { value: 2, label: 'U_CDE', roleId: 1 },\n        { value: 3, label: 'U_FGH', roleId: 1 },\n        { value: 4, label: 'U_EDS', roleId: 1 },\n        { value: 5, label: 'U_ANI', roleId: 1 },\n        { value: 6, label: 'U_LIT', roleId: 2 },\n        { value: 7, label: 'U_RVS', roleId: 2 },\n        { value: 8, label: 'U_UIJ', roleId: 2 },\n      ]);\n    }, 4000);\n  }, []);\n\n  const changeVal = useMemo(() => {\n    return val => {\n      console.log(val);\n      setV(val);\n    };\n  }, []);\n  const [currentRole, setCurrentRole] = useState(1);\n  const [currentUser, setCurrentUser] = useState(1);\n\n  const [search, setSearch] = useState([]);\n\n  const fetchData = async v => {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve(test_data.users.filter(x => x.label.indexOf(v) >= 0));\n      }, 1000);\n    });\n  };\n  const onChange = (v: number, opt) => {\n    setCurrentUser(v);\n    setCurrentRole(opt.data?.roleId);\n  };\n  return (\n    <>\n      <Select\n        placeholder=\"Test\"\n        ref={myRef}\n        // code=\"abc\"\n        // request={request}\n        options={search}\n        showSearch\n        filterOption={false}\n        onSearch={v => {\n          fetchData(v).then(r => {\n            setSearch(r);\n          });\n        }}\n        // onChange={(v: number, opt) => {\n        //   setCurrentRole(v);\n        //   setCurrentUser(undefined);\n\n        //   console.log(v, opt);\n        // }}\n        // onDataSourceChange={arr => {\n        //   console.log(arr);\n        // }}\n        // value={currentRole}\n      />\n      <Select\n        placeholder=\"Role\"\n        code=\"roles\"\n        onChange={onChange}\n        onDataSourceChange={arr => {\n          console.log(arr);\n        }}\n        readonly\n        value={[1, 2]}\n      />\n      <Select\n        placeholder=\"User\"\n        code=\"users\"\n        filter={(v, opt) => {\n          return v.roleId === currentRole;\n        }}\n        onChange={onChange}\n        value={currentUser}\n        dependencies={[currentRole]}\n      />\n      <p>test</p>\n      <Select\n        value={currentUser}\n        optionLabelProp={'fullLabel'}\n        mode=\"multiple\"\n        onChange={onChange}\n        readonly\n      >\n        {test_data.users\n          // @ts-ignore\n          ?.map((x: any) => {\n            return (\n              // @ts-ignore\n              <Select.Option\n                key={x.value}\n                value={x.value}\n                label={x.label}\n                fullLabel={`${x.value} / ${x.label}`}\n              >\n                <div>\n                  <label>Value / Label</label>\n                  <br />\n                  <span>\n                    {x.value} / {x.label}\n                  </span>\n                </div>\n              </Select.Option>\n            );\n          })}\n      </Select>\n      <Select\n        placeholder=\"User\"\n        dataSource={ds}\n        onChange={onChange}\n        value={currentUser}\n        dependencies={[currentRole]}\n      />\n      <ProForm initialValues={{ testuser: 1 }}>\n        <ProSelect\n          label=\"User\"\n          // readonly\n          placeholder=\"User\"\n          dataSource={ds}\n          name=\"testuser\"\n          onChange={onChange}\n          value={currentUser}\n          valueField=\"value\"\n          displayField=\"label\"\n        />\n        <ProSelect\n          label=\"Test Request Source\"\n          request={request}\n          name=\"testuser\"\n          valueField=\"value\"\n          displayField=\"label\"\n        />\n      </ProForm>\n\n      {/* <div>\n        <Button\n          onClick={() => {\n            const start = getRandomInt(test_data.users.length - 1);\n            const end = start + getRandomInt(test_data.users.length - start);\n            MIConfig.updateState({\n              dataSource: {\n                users: test_data.users.slice(start, end),\n              },\n            });\n          }}\n        >\n          Load Data\n        </Button>\n        <Select ref={myRef} code=\"users\" mode=\"tags\" />\n      </div>\n\n      <div>\n        <Button\n          onClick={() => {\n            const start = getRandomInt(test_data.roles.length - 1);\n            const end = start + getRandomInt(test_data.roles.length - start);\n            MIConfig.updateState({\n              dataSource: {\n                roles: test_data.roles.slice(start, end),\n              },\n            });\n          }}\n        >\n          Load Data\n        </Button>\n        <Select\n          code=\"roles\"\n          // filter={r => {\n          //   console.log(r);\n          //   return r.value === 7;\n          // }}\n          mode=\"tags\"\n          value={1}\n          onChange={changeVal}\n        />\n      </div>\n\n      <div>\n        <Button\n          onClick={() => {\n            const start = getRandomInt(test_data.roles.length - 1);\n            const end = start + getRandomInt(test_data.roles.length - start);\n            MIConfig.updateState({\n              dataSource: {\n                roles: test_data.roles.slice(start, end),\n              },\n            });\n          }}\n        >\n          Load Data\n        </Button>\n        <Select\n          code=\"roles\"\n          // url={'test/weree'}\n          // mode=\"tags\"\n          // filter={r => {\n          //   return r.value === 7;\n          // }}\n          dependencies={[v]}\n          value={123}\n        />\n      </div> */}\n    </>\n  );\n};\n\nexport default DataSelectDemo;",u="import React, { useEffect, useState, useMemo } from 'react';\r\nimport { Input, ConfigProvider, Table } from 'antd';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Form, Button, Modal, Select, List } from '@medisys/component';\r\nimport { MIConfig, sleep } from '@medisys/utils';\r\n// console.dir(ConfigProvider);\r\n// console.dir(ConfigProvider.ConfigContext.Consumer);\r\n\r\nconst codeLoading = {};\r\n\r\nfunction getRandomInt(max) {\r\n  return Math.floor(Math.random() * Math.floor(max));\r\n}\r\n\r\nconst DataSelectDemo = () => {\r\n  const [v, setV] = useState(0);\r\n  const myRef = React.useRef();\r\n  const changeVal = useMemo(() => {\r\n    return val => {\r\n      console.log(val);\r\n      setV(val);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(myRef);\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div>\r\n        <List\r\n          code=\"users\"\r\n          size=\"small\"\r\n          header={<div>Header</div>}\r\n          footer={<div>Footer</div>}\r\n          bordered\r\n          renderItem={item => (\r\n            <List.Item>\r\n              {item.value}/{item.label}\r\n            </List.Item>\r\n          )}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DataSelectDemo;",m="import React, { useState } from 'react';\nimport moment from 'moment';\nimport { DatePicker, Form, ProDatePicker } from '@medisys/component';\n\nexport default function() {\n  const [form] = Form.useForm();\n  return (\n    <div>\n      <Form\n        form={form}\n        initialValues={{\n          stringDate: '', //'2099-12-30T00:00:00+08:00', //moment(),\n          momentDate: moment('2099-12-30T00:00:00+08:00'),\n        }}\n      >\n        <Form.Item name=\"stringDate\">\n          <DatePicker />\n        </Form.Item>\n        <Form.Item name=\"momentDate\">\n          <DatePicker showTime />\n          <DatePicker showTime readonly />\n        </Form.Item>\n        <ProDatePicker fieldProps={{ showTime: true }} />\n      </Form>\n    </div>\n  );\n}",p="import React, { useState } from 'react';\nimport moment from 'moment';\nimport { DatePicker, Form, ProRangeDatePicker } from '@medisys/component';\nimport { Switch } from 'antd';\n\nconst { RangePicker } = DatePicker;\nexport default function() {\n  const [form] = Form.useForm();\n  const [autoTransform, setAutoTransfer] = useState(true);\n  return (\n    <div>\n      <Switch\n        checkedChildren=\"True\"\n        unCheckedChildren=\"False\"\n        checked={autoTransform}\n        onChange={v => {\n          setAutoTransfer(v);\n        }}\n      />\n      <Form\n        form={form}\n        initialValues={{\n          autoTransform: true,\n          dateFilter: ['1990-01-01T01:01:00+08:00', moment('2021-01-01')], // ['1990-01-01T01:01:00+08:00', moment()],\n        }}\n      >\n        <Form.Item shouldUpdate>\n          {({ getFieldsValue }) => {\n            const { dateFilter = [] } = getFieldsValue();\n            return (\n              <div>\n                Date selected : {dateFilter?.[0]?.format()} to{' '}\n                {dateFilter?.[1]?.format()}\n              </div>\n            );\n          }}\n        </Form.Item>\n        <Form.Item name=\"dateFilter\">\n          <RangePicker\n            allowEmpty={[true, true]}\n            autoTransformTime={autoTransform}\n            // autoTransformTime={}\n            // onChange={v => {\n            //   form.setFields([\n            //     {\n            //       name: 'dateFilter',\n            //       value: v,\n            //     },\n            //   ]);\n            //   console.log(v);\n            // }}\n          />\n        </Form.Item>\n        <ProRangeDatePicker\n          name=\"dateFilter\"\n          fieldProps={{\n            allowEmpty: [true, true],\n          }}\n        />\n        {/* <Form.Item shouldUpdate>\n          {form => {\n            const { dateFilter = [], autoTransform } = form.getFieldsValue();\n            console.log(dateFilter, autoTransform);\n            return (\n              <RangePicker\n                value={dateFilter}\n                // autoTransformTime={}\n                onChange={v => {\n                  form.setFields([\n                    {\n                      name: 'dateFilter',\n                      value: v,\n                    },\n                  ]);\n                  console.log(v);\n                }}\n              />\n            );\n          }}\n        </Form.Item> */}\n      </Form>\n    </div>\n  );\n}",f="import React, { useState } from 'react';\r\nimport { DragDropList, DragDropListTypes } from '@medisys/component';\r\nimport { Card } from 'antd';\r\nimport { Property } from 'csstype';\r\n\r\nconst lists = [\r\n  {\r\n    id: 'list-1',\r\n    backgroundColor: '#009933',\r\n    title: 'New',\r\n    items: [\r\n      {\r\n        id: 'item-1',\r\n        content: 'Annie Moon',\r\n      },\r\n      {\r\n        id: 'item-2',\r\n        content: 'Jack Bone',\r\n      },\r\n      {\r\n        id: 'item-3',\r\n        content: 'Helen Wells',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 'list-2',\r\n    backgroundColor: '#996600',\r\n    title: 'Prepared',\r\n    items: [\r\n      {\r\n        id: 'item-4',\r\n        content: 'Juses Moses',\r\n      },\r\n      {\r\n        id: 'item-5',\r\n        content: 'Guadiola',\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default () => {\r\n  const initData: {\r\n    lists: DragDropListTypes.List[];\r\n    backgroundColor: Property.BackgroundColor;\r\n  } = {\r\n    lists: lists,\r\n    backgroundColor: 'none',\r\n  };\r\n\r\n  const [state, setState] = useState(initData);\r\n\r\n  const onDragEndHandler = (dragEndRespond: DragEndRespond) => {\r\n    const { sourceListId, destListId, destIndex } = dragEndRespond;\r\n\r\n    if (destListId === undefined || destIndex === undefined) return;\r\n\r\n    const { lists } = state;\r\n\r\n    let modifiedLists =\r\n      sourceListId !== destListId\r\n        ? moveBewteenLists(lists, dragEndRespond)\r\n        : orderInsideTheList(lists, dragEndRespond);\r\n\r\n    setState({ ...state, lists: modifiedLists });\r\n  };\r\n\r\n  const onTitleRender = (listId: string) => {\r\n    console.log('title rendering:', listId);\r\n    return (\r\n      <h2\r\n        style={{ textAlign: 'center', color: 'white', verticalAlign: 'middle' }}\r\n      >\r\n        {state.lists.filter(list => list.id === listId)[0].title}\r\n      </h2>\r\n    );\r\n  };\r\n\r\n  const onItemRender = (itemId: string) => {\r\n    return (\r\n      <Card hoverable style={{ margin: '5px' }}>\r\n        {\r\n          state.lists\r\n            .flatMap(l => l.items)\r\n            .filter(item => item.id === itemId)[0].content\r\n        }\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: '500px', overflow: 'auto' }}>\r\n      <DragDropList\r\n        {...state}\r\n        onDragEnd={onDragEndHandler}\r\n        onTitleRender={onTitleRender}\r\n        onItemRender={onItemRender}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction moveBewteenLists(\r\n  lists: DragDropListTypes.List[],\r\n  dragEndRespond: DragDropListTypes.DragEndRespond,\r\n): any {\r\n  return lists.map(list => {\r\n    const { sourceListId, itemId, destListId, destIndex } = dragEndRespond;\r\n    debugger;\r\n    //Remove the item from the source\r\n    if (list.id === sourceListId)\r\n      return {\r\n        ...list,\r\n        items: list.items.filter(item => item.id !== itemId),\r\n      };\r\n\r\n    //Add the item to the source\r\n    if (list.id === destListId) {\r\n      const sourceList = lists.filter(list => list.id === sourceListId)[0];\r\n      const sourceItem = sourceList.items.filter(item => item.id === itemId)[0];\r\n      return {\r\n        ...list,\r\n        items: [\r\n          ...list.items.slice(0, destIndex),\r\n          sourceItem,\r\n          ...list.items.slice(destIndex),\r\n        ],\r\n      };\r\n    }\r\n\r\n    return { ...list };\r\n  });\r\n}\r\n\r\nfunction orderInsideTheList(\r\n  lists: DragDropListTypes.List[],\r\n  dragEndRespond: DragDropListTypes.DragEndRespond,\r\n): any {\r\n  const {\r\n    sourceListId,\r\n    itemId: itemId,\r\n    destListId,\r\n    destIndex,\r\n    sourceIndex,\r\n  } = dragEndRespond;\r\n\r\n  if (sourceIndex === destIndex) return lists;\r\n\r\n  return lists.map(list => {\r\n    if (list.id !== destListId) {\r\n      return list;\r\n    }\r\n\r\n    const sourceItem = list.items.filter(item => item.id === itemId)[0];\r\n\r\n    const clone = [...list.items];\r\n    clone.splice(sourceIndex, 1);\r\n    clone.splice(destIndex, 0, sourceItem);\r\n\r\n    return {\r\n      ...list,\r\n      items: [...clone],\r\n    };\r\n  });\r\n}",g="import React, { useEffect, useState, useCallback } from 'react';\r\nimport request from 'umi-request';\r\nimport {\r\n  Input,\r\n  Select,\r\n  ConfigProvider,\r\n  Divider,\r\n  message,\r\n  notification,\r\n} from 'antd';\r\nimport { Form, Button, Modal } from '@medisys/component';\r\nimport {\r\n  subscribeTopicAsync,\r\n  initFirebaseMessagingAsync,\r\n  sendMessageAsync,\r\n  unsubscribeTopicAsync,\r\n} from '@medisys/notification';\r\n\r\nimport { useBoolean } from 'ahooks';\r\n\r\nconst MessagingDemo = () => {\r\n  const [state, { toggle, setTrue, setFalse }] = useBoolean(false);\r\n  const [\r\n    state2,\r\n    { toggle: toggle2, setTrue: setTrue2, setFalse: setFalse2 },\r\n  ] = useBoolean(false);\r\n  const [form] = Form.useForm();\r\n\r\n  const [registrationToken, setRegistrationToken] = useState('');\r\n  const subscribeTopic = useCallback(\r\n    token => {\r\n      const topic = form.getFieldValue('topic');\r\n      subscribeTopicAsync({\r\n        token: typeof token === 'string' ? token : registrationToken,\r\n        topic,\r\n      })\r\n        .then(r => {\r\n          setTrue2();\r\n        })\r\n        .catch(error => {\r\n          message.error('Fail to subscribe topic: ' + topic);\r\n          console.log(error);\r\n        });\r\n    },\r\n    [registrationToken, form],\r\n  );\r\n  const unsubscribeTopic = useCallback(\r\n    e => {\r\n      const topic = form.getFieldValue('topic');\r\n\r\n      unsubscribeTopicAsync({\r\n        token: registrationToken,\r\n        topic,\r\n      })\r\n        .then(r => {\r\n          setFalse2();\r\n        })\r\n        .catch(error => {\r\n          message.error('Fail to unsubscribe topic: ' + topic);\r\n          console.log(error);\r\n        });\r\n    },\r\n    [registrationToken, form],\r\n  );\r\n  useEffect(() => {\r\n    initFirebaseMessagingAsync({\r\n      onGetFirebaseConfigAsync: async () => {\r\n        const response = await request(\r\n          'https://localhost:44397/api/FirebaseMessaging/Config',\r\n        );\r\n        return response?.data;\r\n      },\r\n      onGetSenderTokenAsync: async () => {\r\n        const response = await request(\r\n          'https://localhost:44397/api/FirebaseMessaging/SenderToken',\r\n        );\r\n        form.setFieldsValue({\r\n          senderToken: response?.data,\r\n        });\r\n        return response?.data;\r\n      },\r\n      onTokenReceived: async token => {\r\n        setTrue();\r\n        setRegistrationToken(token);\r\n\r\n        subscribeTopic(token);\r\n      },\r\n      onMessageReceived: payload => {\r\n        const { data, from, priority, ...resetProps } = payload;\r\n\r\n        const { notification, ...restData } = data || {};\r\n        const msg = `${JSON.stringify(payload)}`;\r\n        const v = form.getFieldsValue();\r\n        form.setFieldsValue({\r\n          ...v,\r\n          receiveMessage: (v.receiveMessage || '') + msg + '\\n',\r\n        });\r\n      },\r\n    }).catch(error => {\r\n      message.error(error?.message);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div>{state && 'Firebase Messaging active'}</div>\r\n      <div>{state2 && 'Topic subscribed '}</div>\r\n\r\n      <Form\r\n        form={form}\r\n        discardCheck={false}\r\n        initialValues={{\r\n          topic: 'MyTestTopic',\r\n        }}\r\n        onFinish={values => {\r\n          sendMessageAsync({\r\n            identity: { topic: form.getFieldValue('topic') },\r\n            title: 'A message from Medisys Lab',\r\n            data: {\r\n              content: values.messageBody,\r\n              content2: '123123',\r\n              abc: true,\r\n              notification: {\r\n                body: 'I am a testing message body',\r\n              },\r\n            },\r\n          }).catch(error => {\r\n            message.error(\r\n              'Fail to send message, check your sender token is valid',\r\n            );\r\n          });\r\n        }}\r\n      >\r\n        <Form.Item name=\"topic\" rules={[{ required: true }]}>\r\n          <Input placeholder=\"Input topic here\" />\r\n        </Form.Item>\r\n        <Form.Item name=\"receiveMessage\">\r\n          <Input.TextArea\r\n            readOnly\r\n            placeholder=\"Message received display here\"\r\n            rows={15}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item name=\"senderToken\" rules={[{ required: true }]}>\r\n          <Input placeholder=\"Place sender token here\" />\r\n        </Form.Item>\r\n        <Form.Item name=\"messageBody\" rules={[{ required: true }]}>\r\n          <Input.TextArea\r\n            placeholder=\"Type in the message you want to send\"\r\n            rows={4}\r\n          />\r\n        </Form.Item>\r\n        <Button onClick={form.submit}>Send Message</Button>\r\n        <Button disabled={state2} onClick={subscribeTopic}>\r\n          Subscribe Topic\r\n        </Button>\r\n        <Button disabled={!state2} onClick={unsubscribeTopic}>\r\n          Unsubscribe Topic\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MessagingDemo;",v="import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport Basic from './basic';\nimport styles from './index.less';\nconst Test = () => <div style={{ textAlign: 'center' }}>Another Test Page</div>;\n\nexport default () => {\n  return (\n    <Router>\n      <div>\n        <nav>\n          <ul className={styles.ul}>\n            <li>\n              <Link to=\"/\">[Form]</Link>\n            </li>\n            <li>\n              <Link to=\"/anotherpage\">[Another page]</Link>\n            </li>\n          </ul>\n        </nav>\n\n        <Switch>\n          <Route path=\"/anotherpage\">\n            <Test />\n          </Route>\n\n          <Route path=\"/\">\n            <Basic />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};",b="import React, { useState } from 'react';\nimport { Select, Form as AntdForm } from 'antd';\nimport { Input, Form, Button, Modal } from '@medisys/component';\n// import { useBoolean } from 'ahooks';\n\nimport './basic.less';\n// console.log(Button);\nconst { Option } = Select;\n\nconst defaultFormConfig = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n  initialValues: {\n    note: '',\n  },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 },\n};\n\nconst Demo = () => {\n  const [form] = Form.useForm();\n  // const a =AntdForm.useForm();\n  const onGenderChange = (value: any) => {\n    switch (value) {\n      case 'male':\n        form.setFieldsValue({ note: 'Hi, man!' });\n        return;\n      case 'female':\n        form.setFieldsValue({ note: 'Hi, lady!' });\n        return;\n      case 'other':\n        form.setFieldsValue({ note: 'Hi there!' });\n        return;\n    }\n  };\n\n  const onFinish = (values: any) => {\n    console.log(values);\n  };\n\n  const onReset = () => {\n    form.resetFields();\n  };\n\n  const onRemove = () => {\n    setClear(true);\n  };\n\n  const [clear, setClear] = useState(false);\n  return (\n    <>\n      {clear ? (\n        <div>Form Removed</div>\n      ) : (\n        <Form\n          {...defaultFormConfig}\n          discardCheck={true}\n          form={form}\n          name=\"control-hooks\"\n          onFinish={onFinish}\n        >\n          <div>\n            <Form.Item label=\"Form Status\" shouldUpdate>\n              {(f: any) => {\n                return f.isFieldsTouched() ? (\n                  <span style={{ color: 'red' }}>Dirty</span>\n                ) : (\n                  <span style={{ color: 'green' }}>Initial</span>\n                );\n              }}\n            </Form.Item>\n            <Form.Item name=\"note\" label=\"Note\" rules={[{ required: true }]}>\n              <Input />\n            </Form.Item>\n            <Form.Item\n              name=\"gender\"\n              label=\"Gender\"\n              rules={[{ required: true }]}\n            >\n              <Select\n                placeholder=\"Select a option and change input text above\"\n                onChange={onGenderChange}\n                allowClear\n              >\n                <Option value=\"male\">male</Option>\n                <Option value=\"female\">female</Option>\n                <Option value=\"other\">other</Option>\n              </Select>\n            </Form.Item>\n            <Form.Item\n              noStyle\n              shouldUpdate={(prevValues, currentValues) =>\n                prevValues.gender !== currentValues.gender\n              }\n            >\n              {({ getFieldValue, ...rest }) => {\n                return getFieldValue('gender') === 'other' ? (\n                  <Form.Item\n                    name=\"customizeGender\"\n                    label=\"Customize Gender\"\n                    rules={[{ required: true }]}\n                  >\n                    <Input />\n                  </Form.Item>\n                ) : null;\n              }}\n            </Form.Item>\n            <Form.Item {...tailLayout}>\n              <Button danger htmlType=\"submit\">\n                Submit\n              </Button>\n              <Button onClick={onReset}>Reset</Button>\n              <Button danger triggerDiscard onClick={onRemove}>\n                Remove form\n              </Button>\n            </Form.Item>\n          </div>\n        </Form>\n      )}\n    </>\n  );\n};\n\nexport default Demo;",y=".ant-form-item-control-input-content {\n  button {\n    margin-right: 10px;\n  }\n}",h=".ul {\n  list-style: none;\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  padding-left: 0;\n}",C="import React, { useState } from 'react';\nimport { Input, Select } from 'antd';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Form, Button, Modal } from '@medisys/component';\nimport { useBoolean } from 'ahooks';\nimport Basic from './basic';\nconst ModalDemo = () => {\n  const [state, { toggle, setTrue, setFalse }] = useBoolean(false);\n\n  return (\n    <>\n      <Button\n        onClick={() => {\n          setTrue();\n        }}\n      >\n        Show Modal\n      </Button>\n      <Modal\n        visible={state}\n        onCancel={() => {\n          setFalse();\n        }}\n        onOk={() => {\n          setFalse();\n        }}\n      >\n        <Basic />\n      </Modal>\n    </>\n  );\n};\n\nexport default ModalDemo;",I="import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport {\n  Form,\n  Button,\n  Modal,\n  Select,\n  Input,\n  RefInputProps,\n  ConfigProvider,\n} from '@medisys/component';\nimport { MIConfig, sleep } from '@medisys/utils';\n// console.dir(ConfigProvider);\n// console.dir(ConfigProvider.ConfigContext.Consumer);\n\nconst InputBasicDemo = () => {\n  const myRef = React.useRef<RefInputProps>();\n  // console.log(1);\n  // console.log(myRef);\n  useEffect(() => {\n    if (myRef.current) console.log(myRef.current);\n    // myRef.current.focus()\n    // console.log(myRef.current.);\n  }, []);\n  return (\n    <>\n      <Input value=\"123\" text />\n    </>\n  );\n};\n\nexport default InputBasicDemo;",x="import React, { useEffect, useState } from 'react';\r\nimport { ConfigProvider } from 'antd';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport en_US from 'antd/es/locale/en_US';\r\n\r\nimport {\r\n  Form,\r\n  Button,\r\n  Modal,\r\n  Select,\r\n  Input,\r\n  ProInput,\r\n} from '@medisys/component';\r\nimport { MIConfig, sleep } from '@medisys/utils';\r\n// console.dir(ConfigProvider);\r\n// console.dir(ConfigProvider.ConfigContext.Consumer);\r\n\r\nconst ProInputDemo = () => {\r\n  // console.log(1);\r\n  // console.log(myRef);\r\n  useEffect(() => {}, []);\r\n  return (\r\n    <>\r\n      <ConfigProvider locale={en_US}>\r\n        <ProInput />\r\n      </ConfigProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProInputDemo;",P="import React, { useEffect, useState } from 'react';\nimport { ConfigProvider } from 'antd';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Form, Button, Modal, Select, InputNumber } from '@medisys/component';\nimport { MIConfig, sleep } from '@medisys/utils';\n// console.dir(ConfigProvider);\n// console.dir(ConfigProvider.ConfigContext.Consumer);\n\nconst InputBasicDemo = () => {\n  const myRef = React.useRef();\n  // console.log(1);\n  // console.log(myRef);\n  useEffect(() => {\n    if (myRef.current) console.log(myRef.current);\n    // myRef.current.focus()\n    // console.log(myRef.current);\n  }, []);\n  return (\n    <>\n      <InputNumber defaultValue=\"123\" ref={myRef} />\n    </>\n  );\n};\n\nexport default InputBasicDemo;",R="import React, { useEffect, useState } from 'react';\nimport en_US from 'antd/es/locale/en_US';\n\nimport { ProNumber, ConfigProvider } from '@medisys/component';\n\nconst ProInputNumberDemo = () => {\n  useEffect(() => {}, []);\n  return (\n    <ConfigProvider locale={en_US}>\n      <ProNumber />\n    </ConfigProvider>\n  );\n};\n\nexport default ProInputNumberDemo;",w="import React, { useEffect, useContext, useState } from 'react';\n\nimport PageContainer from './PageContainer';\nimport ListDemo from './list';\nconst EditableTableDemo = props => {\n  return (\n    <PageContainer>\n      <ListDemo />\n    </PageContainer>\n  );\n};\n\nexport default EditableTableDemo;",T="import React, { useState, useEffect } from 'react';\nimport { PageContext, ConfigProvider } from '@medisys/component';\n// import { ConfigProvider } from 'antd';\nimport enUS from 'antd/es/locale/en_US';\nconst MIPageContainer = ({\n  children,\n  ...props\n}: {\n  children?: React.ReactNode;\n}) => {\n  const [values, setValues] = useState({\n    actionRef: undefined,\n    setValues: (newValues: any) => {\n      setValues({\n        ...values,\n        ...newValues,\n      });\n    },\n  });\n\n  return (\n    <ConfigProvider componentSize=\"middle\" locale={enUS}>\n      <PageContext.Provider>{children}</PageContext.Provider>\n    </ConfigProvider>\n  );\n};\n\nexport default MIPageContainer;",k="import React, { useEffect } from 'react';\nimport { useModel } from 'dumi';\nimport { ProList, Button, PageContext } from '@medisys/component';\n\nimport { MIConfig } from '@medisys/utils';\n\nMIConfig.setConfig({\n  model: useModel,\n});\nconst ListDemo = props => {\n  const { actionRef, table, ...rest } = PageContext.useContainer();\n  // const actionRef = useRef();\n  useEffect(() => {\n    console.log(actionRef?.current?.getRecords());\n  }, []);\n\n  return (\n    <>\n      <Button\n        onClick={() => {\n          // console.log(table);\n          console.log(actionRef?.current);\n          console.log(actionRef?.current?.getRecords?.());\n          // actionRef?.current?.getRecords();\n        }}\n      >\n        Log Current Data\n      </Button>\n      <ProList\n        // actionRef={actionRef}\n        model=\"couter\"\n        sort={{\n          name: 'ascend',\n        }}\n        // request={async (a, b, c, d) => {\n        //   console.log(a, b, c, d);\n        //   return {\n        //     data: [],\n        //     // success \u8bf7\u8fd4\u56de true\uff0c\n        //     // \u4e0d\u7136 table \u4f1a\u505c\u6b62\u89e3\u6790\u6570\u636e\uff0c\u5373\u4f7f\u6709\u6570\u636e\n        //     success: true,\n        //     // \u4e0d\u4f20\u4f1a\u4f7f\u7528 data \u7684\u957f\u5ea6\uff0c\u5982\u679c\u662f\u5206\u9875\u4e00\u5b9a\u8981\u4f20\n        //     total: 123,\n        //   };\n        // }}\n        metas={{\n          title: {\n            dataIndex: 'name',\n            defaultSortOrder: 'ascend',\n          },\n          avatar: undefined,\n          actions: {\n            render: (text, row) => [\n              <a href={row.html_url} key=\"link\">\n                Action\n              </a>,\n            ],\n          },\n          content: {\n            render: (dom, record) => {\n              return <div>{record.description}</div>;\n            },\n          },\n        }}\n      />\n    </>\n  );\n};\n\nexport default ListDemo;",D="import React, { useEffect, useState } from 'react';\nimport { Input, Select, ConfigProvider } from 'antd';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Form, Button, Modal } from '@medisys/component';\nimport { MIConfig } from '@medisys/utils';\nimport { useBoolean } from 'ahooks';\nlet testLoadingState = false;\n// console.dir(ConfigProvider);\n// console.dir(ConfigProvider.ConfigContext.Consumer);\n\nconst ModalDemo = () => {\n  const [state, { toggle, setTrue, setFalse }] = useBoolean(false);\n  const [\n    state2,\n    { toggle: toggle2, setTrue: setTrue2, setFalse: setFalse2 },\n  ] = useBoolean(false);\n\n  // useEffect(() => {\n  //   setInterval(() => {\n  //     toggle2();\n  //   }, 3000);\n  // }, []);\n  // const codeset = {\n  //   users: [\n  //     { id: 1, name: 'ABC' },\n  //     { id: 2, name: 'CDE' },\n  //   ],\n  // };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      testLoadingState = !testLoadingState;\n      MIConfig.updateState({\n        loading: {\n          models: {\n            somename: testLoadingState,\n          },\n        },\n        codeset: {\n          users: [\n            { id: 1, name: 'ABC' },\n            { id: 2, name: 'CDE' },\n          ],\n        },\n      });\n    }, 5000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n  const { getPrefixCls, autoInsertSpaceInButton, direction } = React.useContext(\n    ConfigProvider.ConfigContext,\n  );\n  // console.log(\n  //   getPrefixCls(),\n  //   getPrefixCls('affix', '123'),\n  //   getPrefixCls,\n  //   autoInsertSpaceInButton,\n  //   direction,\n  // );\n  // Modal.warning\n  console.log(MIConfig);\n  return (\n    <>\n      <Button\n        onClick={() => {\n          setTrue();\n        }}\n      >\n        Show Modal\n      </Button>\n      {/* <ConfigProvider.ConfigContext.Consumer>\n        {context => {\n          const { getPrefixCls } = context;\n          console.log(context, getPrefixCls(), getPrefixCls('affix', '123'));\n          return <div>tet</div>;\n        }}\n      </ConfigProvider.ConfigContext.Consumer> */}\n      <Modal\n        visible={state}\n        model=\"somename\"\n        onCancel={() => {\n          setFalse();\n        }}\n        onOk={() => {\n          setFalse();\n        }}\n      >\n        <div>I toggle loading every 5 seconds</div>\n        <Button\n          onClick={() => {\n            setTrue2();\n          }}\n        >\n          Show Another Modal\n        </Button>\n      </Modal>\n      <Modal\n        visible={state2}\n        onCancel={() => {\n          setFalse2();\n        }}\n        onOk={() => {\n          setFalse2();\n        }}\n      >\n        <div>I am not watching any model, so I dun have loading block</div>\n      </Modal>\n    </>\n  );\n};\n\nexport default ModalDemo;",F="import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport PageContainer from './PageContainer';\r\nimport TableDemo from './table';\r\nconst EditableTableDemo = props => {\r\n  return (\r\n    <PageContainer>\r\n      <TableDemo />\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default EditableTableDemo;",B="import React, { useState, useEffect } from 'react';\r\nimport { PageContext, ConfigProvider } from '@medisys/component';\r\n// import { ConfigProvider } from 'antd';\r\nimport enUS from 'antd/es/locale/en_US';\r\nconst MIPageContainer = ({\r\n  children,\r\n  ...props\r\n}: {\r\n  children?: React.ReactNode;\r\n}) => {\r\n  const [values, setValues] = useState({\r\n    actionRef: undefined,\r\n    setValues: (newValues: any) => {\r\n      setValues({\r\n        ...values,\r\n        ...newValues,\r\n      });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <ConfigProvider componentSize=\"middle\" locale={enUS}>\r\n      <PageContext.Provider>{children}</PageContext.Provider>\r\n    </ConfigProvider>\r\n  );\r\n};\r\n\r\nexport default MIPageContainer;",S="import React, { useEffect, useContext, useState, useRef } from 'react';\n\nimport { ProTable, PageContext, Button } from '@medisys/component';\nimport { defaultColumns } from './utils';\nimport { sampleListData } from '../../../src/data';\nconst EditableTableDemo = props => {\n  const { actionRef, table, ...rest } = PageContext.useContainer();\n  // const actionRef = useRef();\n  useEffect(() => {\n    console.log(actionRef);\n  }, []);\n  return (\n    <>\n      <Button\n        onClick={() => {\n          // console.log(table);\n          console.log(actionRef?.current);\n          console.log(actionRef?.current?.getRecords?.());\n          // actionRef?.current?.getRecords();\n        }}\n      >\n        Log Current Data\n      </Button>\n      <ProTable\n        // actionRef={actionRef}\n        // ref={actionRef}\n        dataSource={sampleListData}\n        columns={defaultColumns}\n        beforeSearchSubmit={values => {\n          return {\n            ...values,\n            // createDate: ['2021-08-25', '2021-08-26'],\n          };\n        }}\n        features={['edit']}\n        onRow={r => {\n          return {\n            onDoubleClick: e => {\n              console.log(e, r);\n            },\n            onClick: (e, tr) => {\n              console.log(e, r);\n            },\n          };\n        }}\n      />\n    </>\n  );\n};\n\nexport default EditableTableDemo;",M="import type { ProColumns } from '@ant-design/pro-table';\r\n\r\n const defaultColumns: ProColumns<any>[] = [\r\n  {\r\n    dataIndex: 'code',\r\n    sorter: true,\r\n    sortBy:'a.id',//sort by another field\r\n    defaultSortOrder: 'ascend',\r\n    formItemProps: {\r\n      rules: [{ required: true }],\r\n    },\r\n  },\r\n  {\r\n    title: 'Display',\r\n    dataIndex: 'displayValue',\r\n    sorter: true,\r\n    formItemProps: {\r\n      rules: [{ required: true }],\r\n    },\r\n  },\r\n  {\r\n    dataIndex: 'description',\r\n    hideInForm: true,\r\n    fieldProps: {\r\n      rows: 1,\r\n    },\r\n  },\r\n  {\r\n    dataIndex: 'balance',\r\n    // hideInForm: true,\r\n    valueType:'digit',\r\n    fieldProps: {\r\n      precision: 3,\r\n    },\r\n  },  \r\n  {\r\n    dataIndex: 'closeDate',\r\n    valueType:'dateTime',\r\n  }, \r\n  {\r\n    dataIndex:'options',\r\n    // width:100\r\n  }\r\n];\r\n\r\nexport {defaultColumns}",U="export * from './list';",A="import moment from 'moment';\r\nconst sampleListData = [\r\n  {\r\n    id: '20d6aa1a-f5e4-4140-9f1a-73b53f9161ed',\r\n    code: 'sss',\r\n    balance: 111111.5,\r\n    displayValue: 'Female',\r\n    description: 'Female',\r\n    closeDate: '2021-12-12T08:00:00+08:00',\r\n    isActive: true,\r\n    createDate: '2021-05-27T11:23:43.570485+08:00',\r\n    createdByUser: 'Administrator',\r\n    updateDate: '2021-05-27T13:31:29.273728+08:00',\r\n    updatedByUser: 'Administrator',\r\n    concurrencyToken: 2478,\r\n  },\r\n  {\r\n    balance: 222222,\r\n    id: 'e7ed747a-f51d-4c52-a87b-8996d34bf134',\r\n    code: '33',\r\n    displayValue: '33',\r\n    description: '333',\r\n    isActive: true,\r\n    createDate: '2021-05-27T14:28:13.729968+08:00',\r\n    createdByUser: 'Administrator',\r\n    updateDate: '2021-05-27T14:28:13.729968+08:00',\r\n    updatedByUser: 'Administrator',\r\n    concurrencyToken: 2484,\r\n  },\r\n  {\r\n    id: '7cb42a60-7eab-433b-8874-f957c146ecf5',\r\n    code: 'd',\r\n    displayValue: 'dd',\r\n    description: 'dd',\r\n    isActive: true,\r\n    createDate: '2021-05-27T14:28:51.19567+08:00',\r\n    createdByUser: 'Administrator',\r\n    updateDate: '2021-05-27T14:28:51.19567+08:00',\r\n    updatedByUser: 'Administrator',\r\n    concurrencyToken: 2486,\r\n  },\r\n  {\r\n    id: '24ffa2fd-420f-4c37-b614-05e45dae380f',\r\n    code: 'ff',\r\n    displayValue: 'f',\r\n    description: 'f',\r\n    isActive: false,\r\n    createDate: '2021-05-27T14:30:01.618173+08:00',\r\n    createdByUser: 'Administrator',\r\n    updateDate: '2021-05-27T14:30:01.618173+08:00',\r\n    updatedByUser: 'Administrator',\r\n    concurrencyToken: 2488,\r\n  },\r\n  {\r\n    id: 'ec756c38-f975-4a81-87ad-3b9661cadb02',\r\n    code: 'fff',\r\n    displayValue: 'fff',\r\n    isActive: true,\r\n    createDate: '2021-05-27T14:30:15.16323+08:00',\r\n    createdByUser: 'Administrator',\r\n    updateDate: '2021-05-27T14:30:15.16323+08:00',\r\n    updatedByUser: 'Administrator',\r\n    concurrencyToken: 2491,\r\n  },\r\n  {\r\n    id: '912ccd3b-7c6b-41a7-8936-d62d1a8911ea',\r\n    code: '12',\r\n    displayValue: '3',\r\n    description: '4',\r\n    isActive: false,\r\n    createDate: '2021-05-27T13:28:15.33416+08:00',\r\n    createdByUser: 'Administrator',\r\n    updateDate: '2021-05-27T16:25:43.153358+08:00',\r\n    updatedByUser: 'Administrator',\r\n    concurrencyToken: 2541,\r\n  },\r\n  {\r\n    id: '9e382761-eba7-43d6-bbb0-3b412119112b',\r\n    code: 'z',\r\n    displayValue: 'z',\r\n    isActive: true,\r\n    createDate: '2021-05-27T14:31:04.109456+08:00',\r\n    createdByUser: 'Administrator',\r\n    updateDate: '2021-05-27T14:31:04.109456+08:00',\r\n    updatedByUser: 'Administrator',\r\n    concurrencyToken: 2493,\r\n  },\r\n  {\r\n    id: '8b035a12-a418-46e3-9388-bbbaaadf4504',\r\n    code: 'a',\r\n    displayValue: 'aa',\r\n    description: 'a',\r\n    isActive: false,\r\n    createDate: '2021-05-27T14:32:25.101441+08:00',\r\n    createdByUser: 'Administrator',\r\n    updateDate: '2021-05-27T14:32:25.101441+08:00',\r\n    updatedByUser: 'Administrator',\r\n    concurrencyToken: 2495,\r\n  },\r\n  {\r\n    id: 'c60cb63a-33a2-4f47-b34b-9f941fe3f5bf',\r\n    code: 'FNew',\r\n    displayValue: 'Female',\r\n    description: 'Female',\r\n    isActive: true,\r\n    createDate: '2021-05-27T11:24:26.997036+08:00',\r\n    createdByUser: 'Administrator',\r\n    updateDate: '2021-05-27T14:32:56.574913+08:00',\r\n    updatedByUser: 'Administrator',\r\n    concurrencyToken: 2497,\r\n  },\r\n  {\r\n    id: '28d90044-d892-4902-b8c6-6a81112aa9d2',\r\n    code: 'FNewNew',\r\n    displayValue: 'Female',\r\n    description: 'Female',\r\n    isActive: true,\r\n    createDate: '2021-05-27T11:24:33.776306+08:00',\r\n    createdByUser: 'Administrator',\r\n    updateDate: '2021-05-27T14:33:28.837898+08:00',\r\n    updatedByUser: 'Administrator',\r\n    concurrencyToken: 2499,\r\n  },\r\n  {\r\n    id: '00000000-0000-0000-0000-000000000003',\r\n    code: 'U',\r\n    displayValue: 'Unknown',\r\n    description: 'Unknown',\r\n    isActive: false,\r\n    createDate: '2020-07-14T08:00:00+08:00',\r\n    createdByUser: 'system',\r\n    updateDate: '2021-05-27T16:25:44.025678+08:00',\r\n    updatedByUser: 'Administrator',\r\n    concurrencyToken: 2543,\r\n  },\r\n  {\r\n    id: '6859668d-a318-4f2c-8315-e09e4f3cf3b9',\r\n    code: '2',\r\n    displayValue: '3',\r\n    isActive: false,\r\n    createDate: '2021-05-27T11:21:13.012559+08:00',\r\n    createdByUser: 'Administrator',\r\n    updateDate: '2021-05-27T16:25:45.338237+08:00',\r\n    updatedByUser: 'Administrator',\r\n    concurrencyToken: 2545,\r\n  },\r\n  {\r\n    id: '00000000-0000-0000-0000-000000000002',\r\n    code: 'M',\r\n    displayValue: 'Male',\r\n    description: 'Male',\r\n    isActive: true,\r\n    createDate: '2020-07-14T08:00:00+08:00',\r\n    createdByUser: 'system',\r\n    updateDate: '2021-05-27T16:25:48.999639+08:00',\r\n    updatedByUser: 'Administrator',\r\n    concurrencyToken: 2547,\r\n  },\r\n  {\r\n    id: '2b40dfaf-861f-4cef-8df6-1a7cbc79e860',\r\n    code: 'ffd',\r\n    displayValue: 'f',\r\n    isActive: true,\r\n    createDate: '2021-05-27T14:38:50.924873+08:00',\r\n    createdByUser: 'Administrator',\r\n    updateDate: '2021-05-27T16:25:50.056413+08:00',\r\n    updatedByUser: 'Administrator',\r\n    concurrencyToken: 2549,\r\n  },\r\n  {\r\n    id: '83465662-d5fd-49aa-b791-afc4c37ccee6',\r\n    code: 'ffdNew',\r\n    displayValue: 'f',\r\n    isActive: true,\r\n    createDate: '2021-05-27T14:38:55.514641+08:00',\r\n    createdByUser: 'Administrator',\r\n    updateDate: '2021-05-27T16:25:50.808833+08:00',\r\n    updatedByUser: 'Administrator',\r\n    concurrencyToken: 2551,\r\n  },\r\n  {\r\n    id: '50388448-cc28-4c20-b0bd-f9b0e7cd56b1',\r\n    code: '1',\r\n    displayValue: '1',\r\n    description: '1',\r\n    isActive: true,\r\n    createDate: '2021-05-25T18:23:50.738349+08:00',\r\n    createdByUser: 'Administrator',\r\n    updateDate: '2021-05-27T16:25:51.553499+08:00',\r\n    updatedByUser: 'Administrator',\r\n    concurrencyToken: 2553,\r\n  },\r\n  {\r\n    id: '0dc59f02-6a6b-46c0-a42c-04221e0ce127',\r\n    code: '1New',\r\n    displayValue: '1',\r\n    description: '1',\r\n    isActive: false,\r\n    createDate: '2021-05-27T14:28:04.563012+08:00',\r\n    createdByUser: 'Administrator',\r\n    updateDate: '2021-05-27T18:09:34.714558+08:00',\r\n    updatedByUser: 'Administrator',\r\n    concurrencyToken: 2559,\r\n  },\r\n  {\r\n    id: '00000000-0000-0000-0000-000000000001',\r\n    code: 'F',\r\n    displayValue: 'Female',\r\n    description: 'Female',\r\n    isActive: true,\r\n    createDate: '2020-07-14T08:00:00+08:00',\r\n    createdByUser: 'system',\r\n    updateDate: '2021-05-25T18:16:09.961887+08:00',\r\n    updatedByUser: 'Administrator',\r\n    concurrencyToken: 2345,\r\n  },\r\n];\r\n\r\nexport { sampleListData };",L="import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport PageContainer from './PageContainer';\r\nimport TableDemo from './modelTable';\r\nconst EditableTableDemo = props => {\r\n  return (\r\n    <PageContainer>\r\n      <TableDemo />\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default EditableTableDemo;",V="import React, { useEffect } from 'react';\nimport { useModel } from 'dumi';\nimport { ProTable, Button, PageContext } from '@medisys/component';\n\nimport { MIConfig } from '@medisys/utils';\nimport { defaultColumns } from './utils';\n\nMIConfig.setConfig({\n  model: useModel,\n});\nconst EditableTableDemo = props => {\n  const { actionRef, table, ...rest } = PageContext.useContainer();\n  // const actionRef = useRef();\n  useEffect(() => {\n    console.log(actionRef);\n  }, []);\n  return (\n    <>\n      <Button\n        onClick={() => {\n          console.log(actionRef);\n          console.log(actionRef?.current?.getRecords());\n\n          // console.log(table);\n        }}\n      >\n        Log Current Data\n      </Button>\n      <ProTable\n        // actionRef={actionRef}\n        model=\"couter\"\n        // request={async (a, b, c, d) => {\n        //   console.log(a, b, c, d);\n        //   return {\n        //     data: [],\n        //     // success \u8bf7\u8fd4\u56de true\uff0c\n        //     // \u4e0d\u7136 table \u4f1a\u505c\u6b62\u89e3\u6790\u6570\u636e\uff0c\u5373\u4f7f\u6709\u6570\u636e\n        //     success: true,\n        //     // \u4e0d\u4f20\u4f1a\u4f7f\u7528 data \u7684\u957f\u5ea6\uff0c\u5982\u679c\u662f\u5206\u9875\u4e00\u5b9a\u8981\u4f20\n        //     total: 123,\n        //   };\n        // }}\n        columns={defaultColumns}\n        // rowSelection={{\n        //   selectOnClick: true,\n        // }}\n        // postData={d => {\n        //   console.log(d);\n        //   return d;\n        // }}\n      />\n    </>\n  );\n};\n\nexport default EditableTableDemo;";n["default"]={"component-job-status-tag":{component:Object(a["c"])({loader:function(){var e=Object(t["a"])(s.a.mark((function e(){return s.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([r.e(3),r.e(5),r.e(28),r.e(4),r.e(7)]).then(r.bind(null,"eDb9"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{jsx:i}},dependencies:{react:{version:">=17.0.0"},"@medisys/component":{version:"0.1.268"},"react-dom":{version:">=17.0.0"}},identifier:"component-job-status-tag"}},"job-status-tag-demo":{component:Object(a["c"])({loader:function(){var e=Object(t["a"])(s.a.mark((function e(){var n,t,o;return s.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return n=r("K+nK"),e.t0=n,e.next=4,Promise.resolve().then(r.t.bind(null,"q1tI",7));case 4:return e.t1=e.sent,t=(0,e.t0)(e.t1),o=function(){return t["default"].createElement("h2",null,"test")},e.abrupt("return",o);case 8:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{jsx:"import React from 'react';\n\nexport default () => <h2>test</h2>;"}},dependencies:{react:{version:"17.0.2"}},identifier:"job-status-tag-demo"}},"button-button":{component:Object(a["c"])({loader:function(){var e=Object(t["a"])(s.a.mark((function e(){return s.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([r.e(3),r.e(5),r.e(28),r.e(4),r.e(7)]).then(r.bind(null,"Gji3"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:c}},dependencies:{antd:{version:"4.16.12",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},"@medisys/test":{version:"0.1.239"},"@medisys/component":{version:"0.1.268"},"react-dom":{version:">=16.9.0"}},title:"Basic usage",description:'<div class="markdown"><p>Basic usage example.</p></div>',identifier:"button-button"}},"button-progress-button":{component:Object(a["c"])({loader:function(){var e=Object(t["a"])(s.a.mark((function e(){return s.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([r.e(3),r.e(5),r.e(28),r.e(4),r.e(7)]).then(r.bind(null,"AFav"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:d}},dependencies:{react:{version:">=17.0.0"},"@medisys/utils":{version:"0.1.266"},"@medisys/component":{version:"0.1.268"},"react-dom":{version:">=17.0.0"}},title:"Auto disable on async call",description:'<div class="markdown"><p>To auto enable/disable button, subscribe to model by setting the <code>mode</code> property on the Button.</p></div>',identifier:"button-progress-button"}},"component-data-source":{component:Object(a["c"])({loader:function(){var e=Object(t["a"])(s.a.mark((function e(){return s.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([r.e(5),r.e(4),r.e(6)]).then(r.bind(null,"fEj9"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:l}},dependencies:{react:{version:">=17.0.0"},"@medisys/component":{version:"0.1.268"},"@medisys/utils":{version:"0.1.266"},"react-dom":{version:">=17.0.0"}},componentName:"data-source",title:"Update DataSource",description:'<div class="markdown"><p>use <code>MIConfig</code> to update dataSource</p></div>',identifier:"component-data-source"}},"data-source-list":{component:Object(a["c"])({loader:function(){var e=Object(t["a"])(s.a.mark((function e(){return s.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([r.e(5),r.e(4),r.e(6)]).then(r.bind(null,"YWjI"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:u}},dependencies:{react:{version:">=17.0.0"},"@medisys/component":{version:"0.1.268"},"react-dom":{version:">=17.0.0"}},componentName:"data-source",title:"Update DataSource",description:'<div class="markdown"><p>use <code>MIConfig</code> to update dataSource</p></div>',identifier:"data-source-list"}},"date-picker-basic":{component:Object(a["c"])({loader:function(){var e=Object(t["a"])(s.a.mark((function e(){return s.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([r.e(3),r.e(5),r.e(28),r.e(4),r.e(7)]).then(r.bind(null,"jIdR"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:m}},dependencies:{react:{version:">=17.0.0"},moment:{version:"2.29.1"},"@medisys/component":{version:"0.1.268"},"react-dom":{version:">=17.0.0"}},title:"Basic usage",description:'<div class="markdown"><p>Basic usage example.</p></div>',identifier:"date-picker-basic"}},"date-picker-range-picker":{component:Object(a["c"])({loader:function(){var e=Object(t["a"])(s.a.mark((function e(){return s.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([r.e(3),r.e(5),r.e(28),r.e(4),r.e(7)]).then(r.bind(null,"JH3V"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:p}},dependencies:{antd:{version:"4.16.12",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},moment:{version:"2.29.1"},"@medisys/component":{version:"0.1.268"},"react-dom":{version:">=16.9.0"}},title:"Basic usage",description:'<div class="markdown"><p>Basic usage example.</p></div>',identifier:"date-picker-range-picker"}},"drag-drop-list-basic":{component:Object(a["c"])({loader:function(){var e=Object(t["a"])(s.a.mark((function e(){return s.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([r.e(3),r.e(5),r.e(28),r.e(4),r.e(7)]).then(r.bind(null,"7WgX"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:f}},dependencies:{antd:{version:"4.16.12",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},"@medisys/component":{version:"0.1.268"},"react-dom":{version:">=16.9.0"}},title:"Basic usage",description:'<div class="markdown"><p>Basic usage example.</p></div>',identifier:"drag-drop-list-basic"}},"firebase-messaging":{component:Object(a["c"])({loader:function(){var e=Object(t["a"])(s.a.mark((function e(){return s.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([r.e(3),r.e(5),r.e(28),r.e(4),r.e(7)]).then(r.bind(null,"KFJW"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:g}},dependencies:{antd:{version:"4.16.12",css:"antd/dist/antd.css"},react:{version:"^16.8.6 || ^17.0"},"umi-request":{version:"1.3.9"},"@medisys/component":{version:"0.1.268"},"@medisys/notification":{version:"0.1.263"},ahooks:{version:"2.10.9"},"react-dom":{version:">=17.0.0"}},title:"Receive messaging from firebase pushing",description:'<div class="markdown"><p>TBD</p></div>',identifier:"firebase-messaging"}},"form-main":{component:Object(a["c"])({loader:function(){var e=Object(t["a"])(s.a.mark((function e(){return s.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([r.e(3),r.e(5),r.e(28),r.e(4),r.e(7)]).then(r.bind(null,"kXXb"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:v},"basic.tsx":{import:"./basic",content:b},"basic.less":{import:"./basic.less",content:y},"index.less":{import:"./index.less",content:h}},dependencies:{react:{version:">=17.0.0"},"react-router-dom":{version:"5.2.0"},antd:{version:"4.16.12",css:"antd/dist/antd.css"},"@medisys/component":{version:"0.1.268"},"react-dom":{version:">=17.0.0"}},iframe:"true // Set to a numeric value to control the height of the iframe",title:"Dirty Check Form",description:'<div class="markdown"><p>Form have dirty field checking prompt</p></div>',identifier:"form-main"}},"form-modal":{component:Object(a["c"])({loader:function(){var e=Object(t["a"])(s.a.mark((function e(){return s.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([r.e(3),r.e(5),r.e(28),r.e(4),r.e(7)]).then(r.bind(null,"VNtw"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:C},"basic.tsx":{import:"./basic",content:b},"basic.less":{import:"./basic.less",content:y}},dependencies:{react:{version:">=17.0.0"},"@medisys/component":{version:"0.1.268"},ahooks:{version:"2.10.9"},"react-dom":{version:">=17.0.0"},antd:{version:"4.16.12",css:"antd/dist/antd.css"}},title:"Form inside Modal",description:'<div class="markdown"><p>If there is a Form component inside Modal, auto dirty check when close Modal</p></div>',identifier:"form-modal"}},"input-basic":{component:Object(a["c"])({loader:function(){var e=Object(t["a"])(s.a.mark((function e(){return s.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([r.e(3),r.e(5),r.e(28),r.e(4),r.e(7)]).then(r.bind(null,"lIp6"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:I}},dependencies:{react:{version:">=17.0.0"},"@medisys/component":{version:"0.1.268"},"react-dom":{version:">=17.0.0"}},title:"Basic usage",description:'<div class="markdown"><ul>\n<li></li>\n</ul></div>',identifier:"input-basic"}},"input-proinput":{component:Object(a["c"])({loader:function(){var e=Object(t["a"])(s.a.mark((function e(){return s.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([r.e(3),r.e(5),r.e(28),r.e(4),r.e(7)]).then(r.bind(null,"xUHi"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:x}},dependencies:{antd:{version:"4.16.12",css:"antd/dist/antd.css"},react:{version:">=17.0.0"},"@medisys/component":{version:"0.1.268"},"react-dom":{version:">=17.0.0"}},title:"Pro Input usage",description:'<div class="markdown"><p>Pro version with field</p></div>',identifier:"input-proinput"}},"input-number-basic":{component:Object(a["c"])({loader:function(){var e=Object(t["a"])(s.a.mark((function e(){return s.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([r.e(3),r.e(5),r.e(28),r.e(4),r.e(7)]).then(r.bind(null,"gb4C"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:P}},dependencies:{react:{version:">=17.0.0"},"@medisys/component":{version:"0.1.268"},"react-dom":{version:">=17.0.0"}},title:"Basic usage",description:'<div class="markdown"><ul>\n<li></li>\n</ul></div>',identifier:"input-number-basic"}},"input-number-pronumber":{component:Object(a["c"])({loader:function(){var e=Object(t["a"])(s.a.mark((function e(){return s.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([r.e(3),r.e(5),r.e(28),r.e(4),r.e(7)]).then(r.bind(null,"zg8I"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:R}},dependencies:{react:{version:">=17.0.0"},antd:{version:"4.16.12",css:"antd/dist/antd.css"},"@medisys/component":{version:"0.1.268"},"react-dom":{version:">=17.0.0"}},title:"Pro Input Number usage",description:'<div class="markdown"><p>Pro version with field</p></div>',identifier:"input-number-pronumber"}},"list-usewithmodel":{component:Object(a["c"])({loader:function(){var e=Object(t["a"])(s.a.mark((function e(){return s.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([r.e(3),r.e(5),r.e(28),r.e(4),r.e(7)]).then(r.bind(null,"rmnc"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:w},"PageContainer.tsx":{import:"./PageContainer",content:T},"list.tsx":{import:"./list",content:k}},dependencies:{react:{version:">=17.0.0"},"@medisys/component":{version:"0.1.268"},antd:{version:"4.16.12",css:"antd/dist/antd.css"},"react-dom":{version:">=17.0.0"},dumi:{version:"1.1.25"},"@medisys/utils":{version:"0.1.266"}},title:"Use with useModel",description:'<div class="markdown"><p>Integrate with umi useModel function</p></div>',identifier:"list-usewithmodel"}},"modal-modal":{component:Object(a["c"])({loader:function(){var e=Object(t["a"])(s.a.mark((function e(){return s.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([r.e(3),r.e(5),r.e(28),r.e(4),r.e(7)]).then(r.bind(null,"enQO"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:D}},dependencies:{antd:{version:"4.16.12",css:"antd/dist/antd.css"},react:{version:"^16.8.6 || ^17.0"},"@medisys/component":{version:"0.1.268"},"@medisys/utils":{version:"0.1.266"},ahooks:{version:"2.10.9"},"react-dom":{version:">=17.0.0"}},title:"Toggle loading based on state update",description:'<div class="markdown"><p>use <code>model</code> to auto trigger loading block</p></div>',identifier:"modal-modal"}},"table-basic":{component:Object(a["c"])({loader:function(){var e=Object(t["a"])(s.a.mark((function e(){return s.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([r.e(3),r.e(5),r.e(28),r.e(4),r.e(7)]).then(r.bind(null,"BDqc"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:F},"PageContainer.tsx":{import:"./PageContainer",content:B},"table.tsx":{import:"./table",content:S},"utils.ts":{import:"./utils",content:M},"src/data/index.tsx":{import:"../../../src/data",content:U},"list.ts":{import:"./list",content:A}},dependencies:{react:{version:">=17.0.0"},"@medisys/component":{version:"0.1.268"},antd:{version:"4.16.12",css:"antd/dist/antd.css"},"react-dom":{version:">=17.0.0"}},title:"Basic usage",description:'<div class="markdown"><p>Default use with local data</p></div>',identifier:"table-basic"}},"table-usewithmodel":{component:Object(a["c"])({loader:function(){var e=Object(t["a"])(s.a.mark((function e(){return s.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([r.e(3),r.e(5),r.e(28),r.e(4),r.e(7)]).then(r.bind(null,"Mk8K"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}()}),previewerProps:{sources:{_:{tsx:L},"PageContainer.tsx":{import:"./PageContainer",content:B},"modelTable.tsx":{import:"./modelTable",content:V},"utils.ts":{import:"./utils",content:M}},dependencies:{react:{version:">=17.0.0"},"@medisys/component":{version:"0.1.268"},antd:{version:"4.16.12",css:"antd/dist/antd.css"},"react-dom":{version:">=17.0.0"},dumi:{version:"1.1.25"},"@medisys/utils":{version:"0.1.266"}},title:"Use with useModel",description:'<div class="markdown"><p>Integrate with umi useModel function</p></div>',identifier:"table-usewithmodel"}}}},x2v5:function(e){e.exports=JSON.parse("{}")}}]);