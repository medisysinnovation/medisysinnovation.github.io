(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[26],{xp60:function(e,n,a){"use strict";a.r(n);var t=a("q1tI"),o=a.n(t),l=a("dEAq"),s=a("H1Ra");a("Rsk4");n["default"]=e=>(o.a.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&l["AnchorLink"].scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),o.a.createElement(o.a.Fragment,null,o.a.createElement("div",{className:"markdown"},o.a.createElement("p",null,"In real project you may want to call MIConfig.updateState on state change, like for umi js, you can add something like this under app.ts file"),o.a.createElement(s["a"],{code:"import { MIConfig } from '@medisys/utils';\n\nexport const dva = {\n  config: {\n    onStateChange(state) {\n      //state:{loading:{models:{somename:Boolean}}}\n      MIConfig.updateState(state)\n    },\n  },\n}",lang:"js"}))))}}]);