(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[18,4],{"0zqC":function(e,r,n){"use strict";n.r(r);var t=n("tJVT"),o=n("q1tI"),a=n.n(o),s=n("k3GJ"),i=n("9kvl"),c=n("dEAq"),d=n("ZpkN");n("TIsu");function l(e,r){var n,t=null===(n=e.match(/\.(\w+)$/))||void 0===n?void 0:n[1];return t||(t=r.tsx?"tsx":"jsx"),t}var u=e=>{var r,n,u,m=Object(o["useRef"])(),p=Object(o["useContext"])(c["context"]),f=p.locale,v=Object(c["useLocaleProps"])(f,e),g=Object(c["useDemoUrl"])(v.identifier),b=v.demoUrl||g,y=(null===i["a"]||void 0===i["a"]?void 0:i["a"].location.hash)==="#".concat(v.identifier),h=1===Object.keys(v.sources).length,C=Object(c["useCodeSandbox"])(null!==(r=v.hideActions)&&void 0!==r&&r.includes("CSB")?null:v),I=Object(c["useRiddle"])(null!==(n=v.hideActions)&&void 0!==n&&n.includes("RIDDLE")?null:v),k=Object(c["useMotions"])(v.motions||[],m.current),T=Object(t["a"])(k,2),w=T[0],x=T[1],F=Object(c["useCopy"])(),R=Object(t["a"])(F,2),B=R[0],S=R[1],D=Object(o["useState"])("_"),P=Object(t["a"])(D,2),E=P[0],A=P[1],_=Object(o["useState"])(l(E,v.sources[E])),U=Object(t["a"])(_,2),M=U[0],O=U[1],L=Object(o["useState"])(Boolean(v.defaultShowCode)),j=Object(t["a"])(L,2),V=j[0],N=j[1],q=Object(o["useState"])(Math.random()),J=Object(t["a"])(q,2),G=J[0],H=J[1],z=v.sources[E][M]||v.sources[E].content,K=Object(c["useTSPlaygroundUrl"])(f,z),W=Object(o["useRef"])(),X=Object(c["usePrefersColor"])(),$=Object(t["a"])(X,1),Y=$[0];function Z(e){A(e),O(l(e,v.sources[e]))}return Object(o["useEffect"])((()=>{H(Math.random())}),[Y]),a.a.createElement("div",{style:v.style,className:[v.className,"__dumi-default-previewer",y?"__dumi-default-previewer-target":""].filter(Boolean).join(" "),id:v.identifier,"data-debug":v.debug||void 0,"data-iframe":v.iframe||void 0},v.iframe&&a.a.createElement("div",{className:"__dumi-default-previewer-browser-nav"}),a.a.createElement("div",{ref:m,className:"__dumi-default-previewer-demo",style:{transform:v.transform?"translate(0, 0)":void 0,padding:v.compact||v.iframe&&!1!==v.compact?"0":void 0,background:v.background}},v.iframe?a.a.createElement("iframe",{title:"dumi-previewer",style:{height:String(v.iframe).replace(/(\d)$/,"$1px")},key:G,src:b,ref:W}):v.children),a.a.createElement("div",{className:"__dumi-default-previewer-desc","data-title":v.title},v.title&&a.a.createElement(c["AnchorLink"],{to:"#".concat(v.identifier)},v.title),v.description&&a.a.createElement("div",{dangerouslySetInnerHTML:{__html:v.description}})),a.a.createElement("div",{className:"__dumi-default-previewer-actions"},C&&a.a.createElement("button",{title:"Open demo on CodeSandbox.io",className:"__dumi-default-icon",role:"codesandbox",onClick:C}),I&&a.a.createElement("button",{title:"Open demo on Riddle",className:"__dumi-default-icon",role:"riddle",onClick:I}),v.motions&&a.a.createElement("button",{title:"Execute motions",className:"__dumi-default-icon",role:"motions",disabled:x,onClick:()=>w()}),v.iframe&&a.a.createElement("button",{title:"Reload demo iframe page",className:"__dumi-default-icon",role:"refresh",onClick:()=>H(Math.random())}),!(null!==(u=v.hideActions)&&void 0!==u&&u.includes("EXTERNAL"))&&a.a.createElement(c["Link"],{target:"_blank",to:b},a.a.createElement("button",{title:"Open demo in new tab",className:"__dumi-default-icon",role:"open-demo",type:"button"})),a.a.createElement("span",null),a.a.createElement("button",{title:"Copy source code",className:"__dumi-default-icon",role:"copy","data-status":S,onClick:()=>B(z)}),"tsx"===M&&V&&a.a.createElement(c["Link"],{target:"_blank",to:K},a.a.createElement("button",{title:"Get JSX via TypeScript Playground",className:"__dumi-default-icon",role:"change-tsx",type:"button"})),a.a.createElement("button",{title:"Toggle source code panel",className:"__dumi-default-icon".concat(V?" __dumi-default-btn-expand":""),role:"source",type:"button",onClick:()=>N(!V)})),V&&a.a.createElement("div",{className:"__dumi-default-previewer-source-wrapper"},!h&&a.a.createElement(s["b"],{className:"__dumi-default-previewer-source-tab",prefixCls:"__dumi-default-tabs",moreIcon:"\xb7\xb7\xb7",defaultActiveKey:E,onChange:Z},Object.keys(v.sources).map((e=>a.a.createElement(s["a"],{tab:"_"===e?"index.".concat(l(e,v.sources[e])):e,key:e})))),a.a.createElement("div",{className:"__dumi-default-previewer-source"},a.a.createElement(d["a"],{code:z,lang:M,showCopy:!1}))))};r["default"]=u},"9kvl":function(e,r,n){"use strict";n.d(r,"a",(function(){return t["b"]})),n.d(r,"b",(function(){return d}));var t=n("FfOG"),o=(n("bCY9"),n("tJVT")),a=n("q1tI"),s=n("1WJl"),i=n.n(s),c=n("qwGt");function d(e,r){var n=Object(a["useContext"])(c["a"]),t=Object(a["useRef"])(r);t.current=r;var s=Object(a["useState"])((()=>t.current?t.current(n.data[e]):n.data[e])),d=Object(o["a"])(s,2),l=d[0],u=d[1],m=Object(a["useRef"])(l);m.current=l;var p=Object(a["useRef"])(!1);return Object(a["useEffect"])((()=>(p.current=!0,()=>{p.current=!1})),[]),Object(a["useEffect"])((()=>{var o=o=>{if(p.current)if(r&&t.current){var a=t.current(o),s=m.current;i()(a,s)||u(a)}else u(o);else setTimeout((()=>{n.data[e]=o,n.update(e)}))};try{n.callbacks[e].add(o),n.update(e)}catch(a){n.callbacks[e]=new Set,n.callbacks[e].add(o),n.update(e)}return()=>{n.callbacks[e].delete(o)}}),[e]),l}},LjKy:function(e,r,n){"use strict";n.r(r);var t=n("q1tI"),o=n.n(t),a=n("dEAq"),s=n("0zqC"),i=n("Rsk4"),c=o.a.memo(i["default"]["table-basic"].component),d=o.a.memo(i["default"]["table-usewithmodel"].component);r["default"]=e=>(o.a.useEffect((()=>{null!==e&&void 0!==e&&e.location.hash&&a["AnchorLink"].scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),o.a.createElement(o.a.Fragment,null,o.a.createElement(o.a.Fragment,null,o.a.createElement("div",{className:"markdown"},o.a.createElement("h1",{id:"editable-table"},o.a.createElement(a["AnchorLink"],{to:"#editable-table","aria-hidden":"true",tabIndex:-1},o.a.createElement("span",{className:"icon icon-link"})),"Editable Table"),o.a.createElement("h2",{id:"pro-table"},o.a.createElement(a["AnchorLink"],{to:"#pro-table","aria-hidden":"true",tabIndex:-1},o.a.createElement("span",{className:"icon icon-link"})),"Pro Table")),o.a.createElement(s["default"],i["default"]["table-basic"].previewerProps,o.a.createElement(c,null)),o.a.createElement("div",{className:"markdown"}),o.a.createElement(s["default"],i["default"]["table-usewithmodel"].previewerProps,o.a.createElement(d,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"api"},o.a.createElement(a["AnchorLink"],{to:"#api","aria-hidden":"true",tabIndex:-1},o.a.createElement("span",{className:"icon icon-link"})),"API"),o.a.createElement("table",null,o.a.createElement("thead",null,o.a.createElement("tr",null,o.a.createElement("th",null,"Property"),o.a.createElement("th",null,"Description"),o.a.createElement("th",null,"Type"),o.a.createElement("th",null,"Default"),o.a.createElement("th",null,"Version"))),o.a.createElement("tbody",null,o.a.createElement("tr",null,o.a.createElement("td",null),o.a.createElement("td",null),o.a.createElement("td",null),o.a.createElement("td",null),o.a.createElement("td",null))))))))},Rsk4:function(e,r,n){"use strict";n.r(r);var t=n("9og8"),o=n("WmNS"),a=n.n(o),s=n("LtsZ"),i="import React from 'react';\r\n\r\nimport { JobStatusTag } from '@medisys/component';\r\n// import '@medisys/component/dist/@medisys/component.css';\r\nexport default function() {\r\n  const btnConfig = {\r\n    variant: 'contained',\r\n    color: 'secondary',\r\n  };\r\n  return (\r\n    <div>\r\n      <JobStatusTag status=\"New\" />\r\n    </div>\r\n  );\r\n}",c="import React from 'react';\r\n\r\nimport { abc } from '@medisys/test';\r\nimport { Button } from '@medisys/component';\r\nimport { Input } from 'antd';\r\n\r\nexport default function() {\r\n  return (\r\n    <div>\r\n      <Input id=\"input-test\" style={{ width: 300, marginRight: 10 }} />\r\n      <Button\r\n        onClick={() => {\r\n          abc(document.getElementById('input-test').value);\r\n        }}\r\n      >\r\n        Test\r\n      </Button>\r\n    </div>\r\n  );\r\n}",d="import React from 'react';\r\nimport { MIConfig } from '@medisys/utils';\r\nimport { Button } from '@medisys/component';\r\n\r\nconst { ProgressButton } = Button;\r\n\r\nexport default function() {\r\n  const updateLoading = status => {\r\n    MIConfig.updateState({\r\n      loading: {\r\n        models: {\r\n          somename: status,\r\n        },\r\n      },\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <ProgressButton\r\n        model=\"somename\"\r\n        onClick={() => {\r\n          updateLoading(true);\r\n          setTimeout(() => {\r\n            updateLoading(false);\r\n          }, 5000);\r\n        }}\r\n      >\r\n        Async Call\r\n      </ProgressButton>\r\n      <ProgressButton loading>Forever loading</ProgressButton>\r\n    </div>\r\n  );\r\n}",l="import React, { useEffect, useState, useMemo } from 'react';\r\nimport { Input, ConfigProvider } from 'antd';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport {\r\n  Form,\r\n  Button,\r\n  Modal,\r\n  Select,\r\n  ProSelect,\r\n  ProForm,\r\n} from '@medisys/component';\r\nimport { MIConfig, sleep } from '@medisys/utils';\r\n// console.dir(ConfigProvider);\r\n// console.dir(ConfigProvider.ConfigContext.Consumer);\r\n\r\nconst codeLoading = {};\r\n\r\nMIConfig.setConfig({\r\n  cache: false,\r\n  dataLoader: async ({ code }) => {\r\n    // console.log(code);\r\n\r\n    if (codeLoading[code]) {\r\n      return;\r\n    }\r\n    console.log(code + ' start');\r\n    codeLoading[code] = true;\r\n    await sleep(3000);\r\n    console.log(code + ' end');\r\n    delete codeLoading[code];\r\n    return test_data[code];\r\n  },\r\n});\r\n// Select.config.loader({\r\n//   loader: async ({ code }) => {\r\n//     if (codeLoading[code]) {\r\n//       return;\r\n//     }\r\n//     console.log(code + ' start');\r\n//     codeLoading[code] = true;\r\n//     await sleep(10000);\r\n//     console.log(code + ' end');\r\n//     delete codeLoading[code];\r\n\r\n//     MIConfig.updateState({\r\n//       dataSource: {\r\n//         [code]: users,\r\n//       },\r\n//     });\r\n//   },\r\n// });\r\n\r\nconst test_data = {\r\n  users: [\r\n    { value: 1, label: 'U_ABC', roleId: 1 },\r\n    { value: 2, label: 'U_CDE', roleId: 1 },\r\n    { value: 3, label: 'U_FGH', roleId: 1 },\r\n    { value: 4, label: 'U_EDS', roleId: 1 },\r\n    { value: 5, label: 'U_ANI', roleId: 1 },\r\n    { value: 6, label: 'U_LIT', roleId: 2 },\r\n    { value: 7, label: 'U_RVS', roleId: 2 },\r\n    { value: 8, label: 'U_UIJ', roleId: 2 },\r\n  ],\r\n  roles: [\r\n    { value: 1, label: 'R_ABC' },\r\n    { value: 2, label: 'R_CDE' },\r\n  ],\r\n};\r\nfunction getRandomInt(max) {\r\n  return Math.floor(Math.random() * Math.floor(max));\r\n}\r\n\r\ninterface T2 {\r\n  value: string;\r\n  label: string;\r\n}\r\nconst DataSelectDemo = () => {\r\n  const [v, setV] = useState(0);\r\n  const myRef = React.useRef();\r\n  const [ds, setDs] = useState([]);\r\n  useEffect(() => {\r\n    // console.log(myRef);\r\n    setTimeout(() => {\r\n      setDs([\r\n        { value: 1, label: 'U_ABC', roleId: 1 },\r\n        { value: 2, label: 'U_CDE', roleId: 1 },\r\n        { value: 3, label: 'U_FGH', roleId: 1 },\r\n        { value: 4, label: 'U_EDS', roleId: 1 },\r\n        { value: 5, label: 'U_ANI', roleId: 1 },\r\n        { value: 6, label: 'U_LIT', roleId: 2 },\r\n        { value: 7, label: 'U_RVS', roleId: 2 },\r\n        { value: 8, label: 'U_UIJ', roleId: 2 },\r\n      ]);\r\n    }, 4000);\r\n  }, []);\r\n\r\n  const changeVal = useMemo(() => {\r\n    return val => {\r\n      console.log(val);\r\n      setV(val);\r\n    };\r\n  }, []);\r\n  const [currentRole, setCurrentRole] = useState(1);\r\n  const [currentUser, setCurrentUser] = useState(1);\r\n\r\n  return (\r\n    <>\r\n      <Select\r\n        placeholder=\"Test\"\r\n        code=\"abc\"\r\n        request={async (\r\n          // \u7b2c\u4e00\u4e2a\u53c2\u6570 params \u67e5\u8be2\u8868\u5355\u548c params \u53c2\u6570\u7684\u7ed3\u5408\r\n          // \u7b2c\u4e00\u4e2a\u53c2\u6570\u4e2d\u4e00\u5b9a\u4f1a\u6709 pageSize \u548c  current \uff0c\u8fd9\u4e24\u4e2a\u53c2\u6570\u662f antd \u7684\u89c4\u8303\r\n          params: {\r\n            pageSize: number;\r\n            current: number;\r\n          },\r\n          sort,\r\n          filter,\r\n        ) => {\r\n          return new Promise(resolve => {\r\n            resolve({\r\n              data: [{ value: 1, label: 123 }],\r\n\r\n              success: true,\r\n              total: 123,\r\n            });\r\n          });\r\n        }}\r\n        // onChange={(v: number, opt) => {\r\n        //   setCurrentRole(v);\r\n        //   setCurrentUser(undefined);\r\n\r\n        //   console.log(v, opt);\r\n        // }}\r\n        // onDataSourceChange={arr => {\r\n        //   console.log(arr);\r\n        // }}\r\n        // value={currentRole}\r\n      />\r\n      <Select\r\n        placeholder=\"Role\"\r\n        code=\"roles\"\r\n        mode=\"multiple\"\r\n        onChange={(v: number, opt) => {\r\n          setCurrentRole(v);\r\n          setCurrentUser(undefined);\r\n\r\n          console.log(v, opt);\r\n        }}\r\n        onDataSourceChange={arr => {\r\n          console.log(arr);\r\n        }}\r\n        readonly\r\n        value={[1, 2]}\r\n      />\r\n      <Select\r\n        placeholder=\"User\"\r\n        code=\"users\"\r\n        filter={(v, opt) => {\r\n          console.log(v.roleId === currentRole);\r\n          return v.roleId === currentRole;\r\n        }}\r\n        onChange={(v: number, opt) => {\r\n          console.log(v, opt);\r\n\r\n          setCurrentUser(v);\r\n          setCurrentRole(opt.data.roleId);\r\n        }}\r\n        value={currentUser}\r\n        dependencies={[currentRole]}\r\n      />\r\n      <Select\r\n        placeholder=\"User\"\r\n        dataSource={ds}\r\n        onChange={(v: number, opt) => {\r\n          console.log(v, opt);\r\n\r\n          setCurrentUser(v);\r\n          setCurrentRole(opt.data.roleId);\r\n        }}\r\n        value={currentUser}\r\n        dependencies={[currentRole]}\r\n      />\r\n      <ProForm initialValues={{ testuser: 1 }}>\r\n        <ProSelect\r\n          placeholder=\"User\"\r\n          dataSource={ds}\r\n          name=\"testuser\"\r\n          onChange={(v: number, opt) => {\r\n            console.log(v, opt);\r\n\r\n            setCurrentUser(v);\r\n            setCurrentRole(opt.data.roleId);\r\n          }}\r\n          value={currentUser}\r\n          valueField=\"value\"\r\n          displayField=\"label\"\r\n        />\r\n      </ProForm>\r\n\r\n      {/* <div>\r\n        <Button\r\n          onClick={() => {\r\n            const start = getRandomInt(test_data.users.length - 1);\r\n            const end = start + getRandomInt(test_data.users.length - start);\r\n            MIConfig.updateState({\r\n              dataSource: {\r\n                users: test_data.users.slice(start, end),\r\n              },\r\n            });\r\n          }}\r\n        >\r\n          Load Data\r\n        </Button>\r\n        <Select ref={myRef} code=\"users\" mode=\"tags\" />\r\n      </div>\r\n\r\n      <div>\r\n        <Button\r\n          onClick={() => {\r\n            const start = getRandomInt(test_data.roles.length - 1);\r\n            const end = start + getRandomInt(test_data.roles.length - start);\r\n            MIConfig.updateState({\r\n              dataSource: {\r\n                roles: test_data.roles.slice(start, end),\r\n              },\r\n            });\r\n          }}\r\n        >\r\n          Load Data\r\n        </Button>\r\n        <Select\r\n          code=\"roles\"\r\n          // filter={r => {\r\n          //   console.log(r);\r\n          //   return r.value === 7;\r\n          // }}\r\n          mode=\"tags\"\r\n          value={1}\r\n          onChange={changeVal}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <Button\r\n          onClick={() => {\r\n            const start = getRandomInt(test_data.roles.length - 1);\r\n            const end = start + getRandomInt(test_data.roles.length - start);\r\n            MIConfig.updateState({\r\n              dataSource: {\r\n                roles: test_data.roles.slice(start, end),\r\n              },\r\n            });\r\n          }}\r\n        >\r\n          Load Data\r\n        </Button>\r\n        <Select\r\n          code=\"roles\"\r\n          // url={'test/weree'}\r\n          // mode=\"tags\"\r\n          // filter={r => {\r\n          //   return r.value === 7;\r\n          // }}\r\n          dependencies={[v]}\r\n          value={123}\r\n        />\r\n      </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DataSelectDemo;",u="import React, { useEffect, useState, useMemo } from 'react';\r\nimport { Input, ConfigProvider, Table } from 'antd';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Form, Button, Modal, Select, List } from '@medisys/component';\r\nimport { MIConfig, sleep } from '@medisys/utils';\r\n// console.dir(ConfigProvider);\r\n// console.dir(ConfigProvider.ConfigContext.Consumer);\r\n\r\nconsole.dir(Table);\r\nconst codeLoading = {};\r\n\r\nfunction getRandomInt(max) {\r\n  return Math.floor(Math.random() * Math.floor(max));\r\n}\r\n\r\nconst DataSelectDemo = () => {\r\n  const [v, setV] = useState(0);\r\n  const myRef = React.useRef();\r\n  const changeVal = useMemo(() => {\r\n    return val => {\r\n      console.log(val);\r\n      setV(val);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(myRef);\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div>\r\n        <List\r\n          code=\"users\"\r\n          size=\"small\"\r\n          header={<div>Header</div>}\r\n          footer={<div>Footer</div>}\r\n          bordered\r\n          renderItem={item => (\r\n            <List.Item>\r\n              {item.value}/{item.label}\r\n            </List.Item>\r\n          )}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DataSelectDemo;",m="import React, { useState } from 'react';\r\nimport moment from 'moment';\r\nimport { abc } from '@medisys/test';\r\nimport { DatePicker, Form } from '@medisys/component';\r\nimport { Switch } from 'antd';\r\n\r\nconst { RangePicker } = DatePicker;\r\nexport default function() {\r\n  const [form] = Form.useForm();\r\n  const [autoTransfer, setAutoTransfer] = useState(true);\r\n  return (\r\n    <div>\r\n      <Switch\r\n        checkedChildren=\"True\"\r\n        unCheckedChildren=\"False\"\r\n        checked={autoTransfer}\r\n        onChange={v => {\r\n          setAutoTransfer(v);\r\n        }}\r\n      />\r\n      <Form\r\n        form={form}\r\n        initialValues={{\r\n          autoTransfer: true,\r\n          dateFilter: [moment(), moment()],\r\n        }}\r\n      >\r\n        <Form.Item shouldUpdate>\r\n          {({ getFieldsValue }) => {\r\n            const { dateFilter = [], autoTransfer } = getFieldsValue();\r\n            // console.log(dateFilter, autoTransfer);\r\n            return (\r\n              <div>\r\n                Date selected : {dateFilter[0]?.format()} to{' '}\r\n                {dateFilter[1]?.format()}\r\n              </div>\r\n            );\r\n          }}\r\n        </Form.Item>\r\n        <Form.Item name=\"dateFilter\">\r\n          <RangePicker\r\n            autoTransfer={autoTransfer}\r\n            // autoTransferTime={}\r\n            // onChange={v => {\r\n            //   form.setFields([\r\n            //     {\r\n            //       name: 'dateFilter',\r\n            //       value: v,\r\n            //     },\r\n            //   ]);\r\n            //   console.log(v);\r\n            // }}\r\n          />\r\n        </Form.Item>\r\n        {/* <Form.Item shouldUpdate>\r\n          {form => {\r\n            const { dateFilter = [], autoTransfer } = form.getFieldsValue();\r\n            console.log(dateFilter, autoTransfer);\r\n            return (\r\n              <RangePicker\r\n                value={dateFilter}\r\n                // autoTransferTime={}\r\n                onChange={v => {\r\n                  form.setFields([\r\n                    {\r\n                      name: 'dateFilter',\r\n                      value: v,\r\n                    },\r\n                  ]);\r\n                  console.log(v);\r\n                }}\r\n              />\r\n            );\r\n          }}\r\n        </Form.Item> */}\r\n      </Form>\r\n    </div>\r\n  );\r\n}",p="import React, { useState } from 'react';\r\nimport { DragDropList, DragDropListTypes } from '@medisys/component';\r\nimport { Card } from 'antd';\r\nimport { Property } from 'csstype';\r\n\r\nconst lists = [\r\n  {\r\n    id: 'list-1',\r\n    backgroundColor: '#009933',\r\n    title: 'New',\r\n    items: [\r\n      {\r\n        id: 'item-1',\r\n        content: 'Annie Moon',\r\n      },\r\n      {\r\n        id: 'item-2',\r\n        content: 'Jack Bone',\r\n      },\r\n      {\r\n        id: 'item-3',\r\n        content: 'Helen Wells',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 'list-2',\r\n    backgroundColor: '#996600',\r\n    title: 'Prepared',\r\n    items: [\r\n      {\r\n        id: 'item-4',\r\n        content: 'Juses Moses',\r\n      },\r\n      {\r\n        id: 'item-5',\r\n        content: 'Guadiola',\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default () => {\r\n  const initData: {\r\n    lists: DragDropListTypes.List[];\r\n    backgroundColor: Property.BackgroundColor;\r\n  } = {\r\n    lists: lists,\r\n    backgroundColor: 'none',\r\n  };\r\n\r\n  const [state, setState] = useState(initData);\r\n\r\n  const onDragEndHandler = (dragEndRespond: DragEndRespond) => {\r\n    const { sourceListId, destListId, destIndex } = dragEndRespond;\r\n\r\n    if (destListId === undefined || destIndex === undefined) return;\r\n\r\n    const { lists } = state;\r\n\r\n    let modifiedLists =\r\n      sourceListId !== destListId\r\n        ? moveBewteenLists(lists, dragEndRespond)\r\n        : orderInsideTheList(lists, dragEndRespond);\r\n\r\n    setState({ ...state, lists: modifiedLists });\r\n  };\r\n\r\n  const onTitleRender = (listId: string) => {\r\n    console.log('title rendering:', listId);\r\n    return (\r\n      <h2\r\n        style={{ textAlign: 'center', color: 'white', verticalAlign: 'middle' }}\r\n      >\r\n        {state.lists.filter(list => list.id === listId)[0].title}\r\n      </h2>\r\n    );\r\n  };\r\n\r\n  const onItemRender = (itemId: string) => {\r\n    return (\r\n      <Card hoverable style={{ margin: '5px' }}>\r\n        {\r\n          state.lists\r\n            .flatMap(l => l.items)\r\n            .filter(item => item.id === itemId)[0].content\r\n        }\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: '500px', overflow: 'auto' }}>\r\n      <DragDropList\r\n        {...state}\r\n        onDragEnd={onDragEndHandler}\r\n        onTitleRender={onTitleRender}\r\n        onItemRender={onItemRender}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction moveBewteenLists(\r\n  lists: DragDropListTypes.List[],\r\n  dragEndRespond: DragDropListTypes.DragEndRespond,\r\n): any {\r\n  return lists.map(list => {\r\n    const { sourceListId, itemId, destListId, destIndex } = dragEndRespond;\r\n    debugger;\r\n    //Remove the item from the source\r\n    if (list.id === sourceListId)\r\n      return {\r\n        ...list,\r\n        items: list.items.filter(item => item.id !== itemId),\r\n      };\r\n\r\n    //Add the item to the source\r\n    if (list.id === destListId) {\r\n      const sourceList = lists.filter(list => list.id === sourceListId)[0];\r\n      const sourceItem = sourceList.items.filter(item => item.id === itemId)[0];\r\n      return {\r\n        ...list,\r\n        items: [\r\n          ...list.items.slice(0, destIndex),\r\n          sourceItem,\r\n          ...list.items.slice(destIndex),\r\n        ],\r\n      };\r\n    }\r\n\r\n    return { ...list };\r\n  });\r\n}\r\n\r\nfunction orderInsideTheList(\r\n  lists: DragDropListTypes.List[],\r\n  dragEndRespond: DragDropListTypes.DragEndRespond,\r\n): any {\r\n  const {\r\n    sourceListId,\r\n    itemId: itemId,\r\n    destListId,\r\n    destIndex,\r\n    sourceIndex,\r\n  } = dragEndRespond;\r\n\r\n  if (sourceIndex === destIndex) return lists;\r\n\r\n  return lists.map(list => {\r\n    if (list.id !== destListId) {\r\n      return list;\r\n    }\r\n\r\n    const sourceItem = list.items.filter(item => item.id === itemId)[0];\r\n\r\n    const clone = [...list.items];\r\n    clone.splice(sourceIndex, 1);\r\n    clone.splice(destIndex, 0, sourceItem);\r\n\r\n    return {\r\n      ...list,\r\n      items: [...clone],\r\n    };\r\n  });\r\n}",f="import React, { useEffect, useState, useCallback } from 'react';\r\nimport request from 'umi-request';\r\nimport {\r\n  Input,\r\n  Select,\r\n  ConfigProvider,\r\n  Divider,\r\n  message,\r\n  notification,\r\n} from 'antd';\r\nimport { Form, Button, Modal } from '@medisys/component';\r\nimport {\r\n  subscribeTopicAsync,\r\n  initFirebaseMessagingAsync,\r\n  sendMessageAsync,\r\n  unsubscribeTopicAsync,\r\n} from '@medisys/notification';\r\n\r\nimport { useBoolean } from 'ahooks';\r\n\r\nconst MessagingDemo = () => {\r\n  const [state, { toggle, setTrue, setFalse }] = useBoolean(false);\r\n  const [\r\n    state2,\r\n    { toggle: toggle2, setTrue: setTrue2, setFalse: setFalse2 },\r\n  ] = useBoolean(false);\r\n  const [form] = Form.useForm();\r\n\r\n  const [registrationToken, setRegistrationToken] = useState('');\r\n  const subscribeTopic = useCallback(\r\n    token => {\r\n      const topic = form.getFieldValue('topic');\r\n      subscribeTopicAsync({\r\n        token: typeof token === 'string' ? token : registrationToken,\r\n        topic,\r\n      })\r\n        .then(r => {\r\n          setTrue2();\r\n        })\r\n        .catch(error => {\r\n          message.error('Fail to subscribe topic: ' + topic);\r\n          console.log(error);\r\n        });\r\n    },\r\n    [registrationToken, form],\r\n  );\r\n  const unsubscribeTopic = useCallback(\r\n    e => {\r\n      const topic = form.getFieldValue('topic');\r\n\r\n      console.log(e);\r\n      unsubscribeTopicAsync({\r\n        token: registrationToken,\r\n        topic,\r\n      })\r\n        .then(r => {\r\n          setFalse2();\r\n        })\r\n        .catch(error => {\r\n          message.error('Fail to unsubscribe topic: ' + topic);\r\n          console.log(error);\r\n        });\r\n    },\r\n    [registrationToken, form],\r\n  );\r\n  useEffect(() => {\r\n    initFirebaseMessagingAsync({\r\n      onGetFirebaseConfig: async () => {\r\n        const response = await request(\r\n          'https://localhost:44397/api/FirebaseMessaging/Config',\r\n        );\r\n        return response?.data;\r\n      },\r\n      onGetSenderToken: async () => {\r\n        const response = await request(\r\n          'https://localhost:44397/api/FirebaseMessaging/SenderToken',\r\n        );\r\n        form.setFieldsValue({\r\n          senderToken: response?.data,\r\n        });\r\n        return response?.data;\r\n      },\r\n      onTokenReceived: async token => {\r\n        setTrue();\r\n        setRegistrationToken(token);\r\n\r\n        subscribeTopic(token);\r\n      },\r\n      onMessageReceived: payload => {\r\n        const { data, from, priority, ...resetProps } = payload;\r\n\r\n        const { notification, ...restData } = data || {};\r\n        const msg = `${JSON.stringify(payload)}`;\r\n        const v = form.getFieldsValue();\r\n        form.setFieldsValue({\r\n          ...v,\r\n          receiveMessage: (v.receiveMessage || '') + msg + '\\n',\r\n        });\r\n      },\r\n    }).catch(error => {\r\n      message.error(error?.message);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div>{state && 'Firebase Messaging active'}</div>\r\n      <div>{state2 && 'Topic subscribed '}</div>\r\n\r\n      <Form\r\n        form={form}\r\n        discardCheck={false}\r\n        initialValues={{\r\n          topic: 'MyTestTopic',\r\n        }}\r\n        onFinish={values => {\r\n          sendMessageAsync({\r\n            identity: { topic: form.getFieldValue('topic') },\r\n            title: 'A message from Medisys Lab',\r\n            data: {\r\n              content: values.messageBody,\r\n              notification: {\r\n                body: 'I am a testing message body',\r\n              },\r\n            },\r\n          }).catch(error => {\r\n            message.error(\r\n              'Fail to send message, check your sender token is valid',\r\n            );\r\n          });\r\n        }}\r\n      >\r\n        <Form.Item name=\"topic\" rules={[{ required: true }]}>\r\n          <Input placeholder=\"Input topic here\" />\r\n        </Form.Item>\r\n        <Form.Item name=\"receiveMessage\">\r\n          <Input.TextArea\r\n            readOnly\r\n            placeholder=\"Message received display here\"\r\n            rows={15}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item name=\"senderToken\" rules={[{ required: true }]}>\r\n          <Input placeholder=\"Place sender token here\" />\r\n        </Form.Item>\r\n        <Form.Item name=\"messageBody\" rules={[{ required: true }]}>\r\n          <Input.TextArea\r\n            placeholder=\"Type in the message you want to send\"\r\n            rows={4}\r\n          />\r\n        </Form.Item>\r\n        <Button onClick={form.submit}>Send Message</Button>\r\n        <Button disabled={state2} onClick={subscribeTopic}>\r\n          Subscribe Topic\r\n        </Button>\r\n        <Button disabled={!state2} onClick={unsubscribeTopic}>\r\n          Unsubscribe Topic\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MessagingDemo;",v="import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport Basic from './basic';\r\nimport styles from './index.less';\r\nconst Test = () => <div style={{ textAlign: 'center' }}>Another Test Page</div>;\r\n\r\nexport default () => {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <nav>\r\n          <ul className={styles.ul}>\r\n            <li>\r\n              <Link to=\"/\">[Form]</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/anotherpage\">[Another page]</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n\r\n        <Switch>\r\n          <Route path=\"/anotherpage\">\r\n            <Test />\r\n          </Route>\r\n\r\n          <Route path=\"/\">\r\n            <Basic />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};",g="import React, { useState } from 'react';\r\nimport { Select, Form as AntdForm } from 'antd';\r\nimport { Input, Form, Button, Modal } from '@medisys/component';\r\n// import { useBoolean } from 'ahooks';\r\n\r\nimport './basic.less';\r\n// console.log(Button);\r\nconst { Option } = Select;\r\n\r\nconst defaultFormConfig = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n  initialValues: {\r\n    note: '',\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\nconst Demo = () => {\r\n  const [form] = Form.useForm();\r\n  // const a =AntdForm.useForm();\r\n  const onGenderChange = (value: any) => {\r\n    switch (value) {\r\n      case 'male':\r\n        form.setFieldsValue({ note: 'Hi, man!' });\r\n        return;\r\n      case 'female':\r\n        form.setFieldsValue({ note: 'Hi, lady!' });\r\n        return;\r\n      case 'other':\r\n        form.setFieldsValue({ note: 'Hi there!' });\r\n        return;\r\n    }\r\n  };\r\n\r\n  const onFinish = (values: any) => {\r\n    console.log(values);\r\n  };\r\n\r\n  const onReset = () => {\r\n    form.resetFields();\r\n  };\r\n\r\n  const onRemove = () => {\r\n    setClear(true);\r\n  };\r\n\r\n  const [clear, setClear] = useState(false);\r\n  return (\r\n    <>\r\n      {clear ? (\r\n        <div>Form Removed</div>\r\n      ) : (\r\n        <Form\r\n          {...defaultFormConfig}\r\n          discardCheck={true}\r\n          form={form}\r\n          name=\"control-hooks\"\r\n          onFinish={onFinish}\r\n        >\r\n          <div>\r\n            <Form.Item label=\"Form Status\" shouldUpdate>\r\n              {(f: any) => {\r\n                return f.isFieldsTouched() ? (\r\n                  <span style={{ color: 'red' }}>Dirty</span>\r\n                ) : (\r\n                  <span style={{ color: 'green' }}>Initial</span>\r\n                );\r\n              }}\r\n            </Form.Item>\r\n            <Form.Item name=\"note\" label=\"Note\" rules={[{ required: true }]}>\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"gender\"\r\n              label=\"Gender\"\r\n              rules={[{ required: true }]}\r\n            >\r\n              <Select\r\n                placeholder=\"Select a option and change input text above\"\r\n                onChange={onGenderChange}\r\n                allowClear\r\n              >\r\n                <Option value=\"male\">male</Option>\r\n                <Option value=\"female\">female</Option>\r\n                <Option value=\"other\">other</Option>\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item\r\n              noStyle\r\n              shouldUpdate={(prevValues, currentValues) =>\r\n                prevValues.gender !== currentValues.gender\r\n              }\r\n            >\r\n              {({ getFieldValue, ...rest }) => {\r\n                return getFieldValue('gender') === 'other' ? (\r\n                  <Form.Item\r\n                    name=\"customizeGender\"\r\n                    label=\"Customize Gender\"\r\n                    rules={[{ required: true }]}\r\n                  >\r\n                    <Input />\r\n                  </Form.Item>\r\n                ) : null;\r\n              }}\r\n            </Form.Item>\r\n            <Form.Item {...tailLayout}>\r\n              <Button danger htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n              <Button onClick={onReset}>Reset</Button>\r\n              <Button danger triggerDiscard onClick={onRemove}>\r\n                Remove form\r\n              </Button>\r\n            </Form.Item>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Demo;",b=".ant-form-item-control-input-content {\r\n  button {\r\n    margin-right: 10px;\r\n  }\r\n}",y=".ul {\r\n  list-style: none;\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 10px;\r\n  padding-left: 0;\r\n}",h="import React, { useState } from 'react';\r\nimport { Input, Select } from 'antd';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Form, Button, Modal } from '@medisys/component';\r\nimport { useBoolean } from 'ahooks';\r\nimport Basic from './basic';\r\nconst ModalDemo = () => {\r\n  const [state, { toggle, setTrue, setFalse }] = useBoolean(false);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={() => {\r\n          setTrue();\r\n        }}\r\n      >\r\n        Show Modal\r\n      </Button>\r\n      <Modal\r\n        visible={state}\r\n        onCancel={() => {\r\n          setFalse();\r\n        }}\r\n        onOk={() => {\r\n          setFalse();\r\n        }}\r\n      >\r\n        <Basic />\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalDemo;",C="import React, { useEffect, useState } from 'react';\r\nimport { ConfigProvider } from 'antd';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport {\r\n  Form,\r\n  Button,\r\n  Modal,\r\n  Select,\r\n  Input,\r\n  RefInputProps,\r\n} from '@medisys/component';\r\nimport { MIConfig, sleep } from '@medisys/utils';\r\n// console.dir(ConfigProvider);\r\n// console.dir(ConfigProvider.ConfigContext.Consumer);\r\n\r\nconst InputBasicDemo = () => {\r\n  const myRef = React.useRef<RefInputProps>();\r\n  // console.log(1);\r\n  // console.log(myRef);\r\n  useEffect(() => {\r\n    if (myRef.current) console.log(myRef.current);\r\n    // myRef.current.focus()\r\n    // console.log(myRef.current.);\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Input value=\"123\" text />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputBasicDemo;",I="import React, { useEffect, useState } from 'react';\r\nimport { ConfigProvider } from 'antd';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport en_US from 'antd/es/locale/en_US';\r\n\r\nimport {\r\n  Form,\r\n  Button,\r\n  Modal,\r\n  Select,\r\n  Input,\r\n  ProInput,\r\n} from '@medisys/component';\r\nimport { MIConfig, sleep } from '@medisys/utils';\r\n// console.dir(ConfigProvider);\r\n// console.dir(ConfigProvider.ConfigContext.Consumer);\r\n\r\nconst ProInputDemo = () => {\r\n  // console.log(1);\r\n  // console.log(myRef);\r\n  useEffect(() => {}, []);\r\n  return (\r\n    <>\r\n      <ConfigProvider locale={en_US}>\r\n        <ProInput />\r\n      </ConfigProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProInputDemo;",k="import React, { useEffect, useState } from 'react';\r\nimport { Input, Select, ConfigProvider } from 'antd';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Form, Button, Modal } from '@medisys/component';\r\nimport { MIConfig } from '@medisys/utils';\r\nimport { useBoolean } from 'ahooks';\r\nlet testLoadingState = false;\r\n// console.dir(ConfigProvider);\r\n// console.dir(ConfigProvider.ConfigContext.Consumer);\r\n\r\nconst ModalDemo = () => {\r\n  const [state, { toggle, setTrue, setFalse }] = useBoolean(false);\r\n  const [\r\n    state2,\r\n    { toggle: toggle2, setTrue: setTrue2, setFalse: setFalse2 },\r\n  ] = useBoolean(false);\r\n\r\n  // useEffect(() => {\r\n  //   setInterval(() => {\r\n  //     toggle2();\r\n  //   }, 3000);\r\n  // }, []);\r\n  // const codeset = {\r\n  //   users: [\r\n  //     { id: 1, name: 'ABC' },\r\n  //     { id: 2, name: 'CDE' },\r\n  //   ],\r\n  // };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      testLoadingState = !testLoadingState;\r\n      MIConfig.updateState({\r\n        loading: {\r\n          models: {\r\n            somename: testLoadingState,\r\n          },\r\n        },\r\n        codeset: {\r\n          users: [\r\n            { id: 1, name: 'ABC' },\r\n            { id: 2, name: 'CDE' },\r\n          ],\r\n        },\r\n      });\r\n    }, 5000);\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n  const { getPrefixCls, autoInsertSpaceInButton, direction } = React.useContext(\r\n    ConfigProvider.ConfigContext,\r\n  );\r\n  // console.log(\r\n  //   getPrefixCls(),\r\n  //   getPrefixCls('affix', '123'),\r\n  //   getPrefixCls,\r\n  //   autoInsertSpaceInButton,\r\n  //   direction,\r\n  // );\r\n  // Modal.warning\r\n  console.log(MIConfig);\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={() => {\r\n          setTrue();\r\n        }}\r\n      >\r\n        Show Modal\r\n      </Button>\r\n      {/* <ConfigProvider.ConfigContext.Consumer>\r\n        {context => {\r\n          const { getPrefixCls } = context;\r\n          console.log(context, getPrefixCls(), getPrefixCls('affix', '123'));\r\n          return <div>tet</div>;\r\n        }}\r\n      </ConfigProvider.ConfigContext.Consumer> */}\r\n      <Modal\r\n        visible={state}\r\n        model=\"somename\"\r\n        onCancel={() => {\r\n          setFalse();\r\n        }}\r\n        onOk={() => {\r\n          setFalse();\r\n        }}\r\n      >\r\n        <div>I toggle loading every 5 seconds</div>\r\n        <Button\r\n          onClick={() => {\r\n            setTrue2();\r\n          }}\r\n        >\r\n          Show Another Modal\r\n        </Button>\r\n      </Modal>\r\n      <Modal\r\n        visible={state2}\r\n        onCancel={() => {\r\n          setFalse2();\r\n        }}\r\n        onOk={() => {\r\n          setFalse2();\r\n        }}\r\n      >\r\n        <div>I am not watching any model, so I dun have loading block</div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalDemo;",T="import React, { useEffect } from 'react';\r\n\r\nimport { ProTable, ConfigProvider } from '@medisys/component';\r\nimport { MIConfig, sleep } from '@medisys/utils';\r\nimport enUS from 'antd/es/locale/en_US';\r\nimport { defaultColumns } from './utils';\r\nimport { sampleListData } from '../../../src/data';\r\n\r\nconst EditableTableDemo = props => {\r\n  useEffect(() => {}, []);\r\n  return (\r\n    <>\r\n      <ConfigProvider locale={enUS}>\r\n        <ProTable dataSource={sampleListData} columns={defaultColumns} />\r\n      </ConfigProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditableTableDemo;",w="import type { ProColumns } from '@ant-design/pro-table';\r\n\r\n const defaultColumns: ProColumns<any>[] = [\r\n  {\r\n    dataIndex: 'code',\r\n    sorter: true,\r\n    defaultSortOrder: 'ascend',\r\n    formItemProps: {\r\n      rules: [{ required: true }],\r\n    },\r\n  },\r\n  {\r\n    title: 'Display',\r\n    dataIndex: 'displayValue',\r\n    sorter: true,\r\n    formItemProps: {\r\n      rules: [{ required: true }],\r\n    },\r\n  },\r\n  {\r\n    dataIndex: 'description',\r\n    hideInForm: true,\r\n    fieldProps: {\r\n      rows: 1,\r\n    },\r\n  },\r\n];\r\n\r\nexport {defaultColumns}",x="export * from './list';",F="const sampleListData = [\r\n  {\r\n    id: '20d6aa1a-f5e4-4140-9f1a-73b53f9161ed',\r\n    code: 'sss',\r\n    displayValue: 'Female',\r\n    description: 'Female',\r\n    isActive: true,\r\n    createDate: '2021-05-27T11:23:43.570485+08:00',\r\n    createdByUser: 'Administrator',\r\n    updateDate: '2021-05-27T13:31:29.273728+08:00',\r\n    updatedByUser: 'Administrator',\r\n    concurrencyToken: 2478,\r\n  },\r\n  {\r\n    id: 'e7ed747a-f51d-4c52-a87b-8996d34bf134',\r\n    code: '33',\r\n    displayValue: '33',\r\n    description: '333',\r\n    isActive: true,\r\n    createDate: '2021-05-27T14:28:13.729968+08:00',\r\n    createdByUser: 'Administrator',\r\n    updateDate: '2021-05-27T14:28:13.729968+08:00',\r\n    updatedByUser: 'Administrator',\r\n    concurrencyToken: 2484,\r\n  },\r\n  {\r\n    id: '7cb42a60-7eab-433b-8874-f957c146ecf5',\r\n    code: 'd',\r\n    displayValue: 'dd',\r\n    description: 'dd',\r\n    isActive: true,\r\n    createDate: '2021-05-27T14:28:51.19567+08:00',\r\n    createdByUser: 'Administrator',\r\n    updateDate: '2021-05-27T14:28:51.19567+08:00',\r\n    updatedByUser: 'Administrator',\r\n    concurrencyToken: 2486,\r\n  },\r\n  {\r\n    id: '24ffa2fd-420f-4c37-b614-05e45dae380f',\r\n    code: 'ff',\r\n    displayValue: 'f',\r\n    description: 'f',\r\n    isActive: false,\r\n    createDate: '2021-05-27T14:30:01.618173+08:00',\r\n    createdByUser: 'Administrator',\r\n    updateDate: '2021-05-27T14:30:01.618173+08:00',\r\n    updatedByUser: 'Administrator',\r\n    concurrencyToken: 2488,\r\n  },\r\n  {\r\n    id: 'ec756c38-f975-4a81-87ad-3b9661cadb02',\r\n    code: 'fff',\r\n    displayValue: 'fff',\r\n    isActive: true,\r\n    createDate: '2021-05-27T14:30:15.16323+08:00',\r\n    createdByUser: 'Administrator',\r\n    updateDate: '2021-05-27T14:30:15.16323+08:00',\r\n    updatedByUser: 'Administrator',\r\n    concurrencyToken: 2491,\r\n  },\r\n  {\r\n    id: '912ccd3b-7c6b-41a7-8936-d62d1a8911ea',\r\n    code: '12',\r\n    displayValue: '3',\r\n    description: '4',\r\n    isActive: false,\r\n    createDate: '2021-05-27T13:28:15.33416+08:00',\r\n    createdByUser: 'Administrator',\r\n    updateDate: '2021-05-27T16:25:43.153358+08:00',\r\n    updatedByUser: 'Administrator',\r\n    concurrencyToken: 2541,\r\n  },\r\n  {\r\n    id: '9e382761-eba7-43d6-bbb0-3b412119112b',\r\n    code: 'z',\r\n    displayValue: 'z',\r\n    isActive: true,\r\n    createDate: '2021-05-27T14:31:04.109456+08:00',\r\n    createdByUser: 'Administrator',\r\n    updateDate: '2021-05-27T14:31:04.109456+08:00',\r\n    updatedByUser: 'Administrator',\r\n    concurrencyToken: 2493,\r\n  },\r\n  {\r\n    id: '8b035a12-a418-46e3-9388-bbbaaadf4504',\r\n    code: 'a',\r\n    displayValue: 'aa',\r\n    description: 'a',\r\n    isActive: false,\r\n    createDate: '2021-05-27T14:32:25.101441+08:00',\r\n    createdByUser: 'Administrator',\r\n    updateDate: '2021-05-27T14:32:25.101441+08:00',\r\n    updatedByUser: 'Administrator',\r\n    concurrencyToken: 2495,\r\n  },\r\n  {\r\n    id: 'c60cb63a-33a2-4f47-b34b-9f941fe3f5bf',\r\n    code: 'FNew',\r\n    displayValue: 'Female',\r\n    description: 'Female',\r\n    isActive: true,\r\n    createDate: '2021-05-27T11:24:26.997036+08:00',\r\n    createdByUser: 'Administrator',\r\n    updateDate: '2021-05-27T14:32:56.574913+08:00',\r\n    updatedByUser: 'Administrator',\r\n    concurrencyToken: 2497,\r\n  },\r\n  {\r\n    id: '28d90044-d892-4902-b8c6-6a81112aa9d2',\r\n    code: 'FNewNew',\r\n    displayValue: 'Female',\r\n    description: 'Female',\r\n    isActive: true,\r\n    createDate: '2021-05-27T11:24:33.776306+08:00',\r\n    createdByUser: 'Administrator',\r\n    updateDate: '2021-05-27T14:33:28.837898+08:00',\r\n    updatedByUser: 'Administrator',\r\n    concurrencyToken: 2499,\r\n  },\r\n  {\r\n    id: '00000000-0000-0000-0000-000000000003',\r\n    code: 'U',\r\n    displayValue: 'Unknown',\r\n    description: 'Unknown',\r\n    isActive: false,\r\n    createDate: '2020-07-14T08:00:00+08:00',\r\n    createdByUser: 'system',\r\n    updateDate: '2021-05-27T16:25:44.025678+08:00',\r\n    updatedByUser: 'Administrator',\r\n    concurrencyToken: 2543,\r\n  },\r\n  {\r\n    id: '6859668d-a318-4f2c-8315-e09e4f3cf3b9',\r\n    code: '2',\r\n    displayValue: '3',\r\n    isActive: false,\r\n    createDate: '2021-05-27T11:21:13.012559+08:00',\r\n    createdByUser: 'Administrator',\r\n    updateDate: '2021-05-27T16:25:45.338237+08:00',\r\n    updatedByUser: 'Administrator',\r\n    concurrencyToken: 2545,\r\n  },\r\n  {\r\n    id: '00000000-0000-0000-0000-000000000002',\r\n    code: 'M',\r\n    displayValue: 'Male',\r\n    description: 'Male',\r\n    isActive: true,\r\n    createDate: '2020-07-14T08:00:00+08:00',\r\n    createdByUser: 'system',\r\n    updateDate: '2021-05-27T16:25:48.999639+08:00',\r\n    updatedByUser: 'Administrator',\r\n    concurrencyToken: 2547,\r\n  },\r\n  {\r\n    id: '2b40dfaf-861f-4cef-8df6-1a7cbc79e860',\r\n    code: 'ffd',\r\n    displayValue: 'f',\r\n    isActive: true,\r\n    createDate: '2021-05-27T14:38:50.924873+08:00',\r\n    createdByUser: 'Administrator',\r\n    updateDate: '2021-05-27T16:25:50.056413+08:00',\r\n    updatedByUser: 'Administrator',\r\n    concurrencyToken: 2549,\r\n  },\r\n  {\r\n    id: '83465662-d5fd-49aa-b791-afc4c37ccee6',\r\n    code: 'ffdNew',\r\n    displayValue: 'f',\r\n    isActive: true,\r\n    createDate: '2021-05-27T14:38:55.514641+08:00',\r\n    createdByUser: 'Administrator',\r\n    updateDate: '2021-05-27T16:25:50.808833+08:00',\r\n    updatedByUser: 'Administrator',\r\n    concurrencyToken: 2551,\r\n  },\r\n  {\r\n    id: '50388448-cc28-4c20-b0bd-f9b0e7cd56b1',\r\n    code: '1',\r\n    displayValue: '1',\r\n    description: '1',\r\n    isActive: true,\r\n    createDate: '2021-05-25T18:23:50.738349+08:00',\r\n    createdByUser: 'Administrator',\r\n    updateDate: '2021-05-27T16:25:51.553499+08:00',\r\n    updatedByUser: 'Administrator',\r\n    concurrencyToken: 2553,\r\n  },\r\n  {\r\n    id: '0dc59f02-6a6b-46c0-a42c-04221e0ce127',\r\n    code: '1New',\r\n    displayValue: '1',\r\n    description: '1',\r\n    isActive: false,\r\n    createDate: '2021-05-27T14:28:04.563012+08:00',\r\n    createdByUser: 'Administrator',\r\n    updateDate: '2021-05-27T18:09:34.714558+08:00',\r\n    updatedByUser: 'Administrator',\r\n    concurrencyToken: 2559,\r\n  },\r\n  {\r\n    id: '00000000-0000-0000-0000-000000000001',\r\n    code: 'F',\r\n    displayValue: 'Female',\r\n    description: 'Female',\r\n    isActive: true,\r\n    createDate: '2020-07-14T08:00:00+08:00',\r\n    createdByUser: 'system',\r\n    updateDate: '2021-05-25T18:16:09.961887+08:00',\r\n    updatedByUser: 'Administrator',\r\n    concurrencyToken: 2345,\r\n  },\r\n];\r\n\r\nexport { sampleListData };",R="import React, { useEffect } from 'react';\r\n\r\nimport { useModel } from 'dumi';\r\nimport { ProTable, ConfigProvider } from '@medisys/component';\r\nimport { MIConfig, sleep } from '@medisys/utils';\r\nimport enUS from 'antd/es/locale/en_US';\r\nimport { defaultColumns } from './utils';\r\n\r\nMIConfig.setConfig({\r\n  model: useModel,\r\n});\r\nconst EditableTableDemo = props => {\r\n  useEffect(() => {}, []);\r\n  return (\r\n    <>\r\n      <ConfigProvider locale={enUS}>\r\n        <ProTable model=\"couter\" columns={defaultColumns} />\r\n      </ConfigProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditableTableDemo;";r["default"]={"component-job-status-tag":{component:Object(s["dynamic"])({loader:function(){var e=Object(t["a"])(a.a.mark((function e(){return a.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([n.e(1),n.e(3),n.e(5),n.e(26),n.e(7)]).then(n.bind(null,"eDb9"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function r(){return e.apply(this,arguments)}return r}()}),previewerProps:{sources:{_:{jsx:i}},dependencies:{react:{version:">=17.0.0"},"@medisys/component":{version:"0.1.163"},"react-dom":{version:">=17.0.0"}},identifier:"component-job-status-tag"}},"job-status-tag-demo":{component:Object(s["dynamic"])({loader:function(){var e=Object(t["a"])(a.a.mark((function e(){var r,t,o;return a.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return r=n("K+nK"),e.t0=r,e.next=4,Promise.resolve().then(n.t.bind(null,"q1tI",7));case 4:return e.t1=e.sent,t=(0,e.t0)(e.t1),o=function(){return t["default"].createElement("h2",null,"test")},e.abrupt("return",o);case 8:case"end":return e.stop()}}),e)})));function r(){return e.apply(this,arguments)}return r}()}),previewerProps:{sources:{_:{jsx:"import React from 'react';\n\nexport default () => <h2>test</h2>;"}},dependencies:{react:{version:"17.0.2"}},identifier:"job-status-tag-demo"}},"button-button":{component:Object(s["dynamic"])({loader:function(){var e=Object(t["a"])(a.a.mark((function e(){return a.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([n.e(1),n.e(3),n.e(5),n.e(26),n.e(7)]).then(n.bind(null,"Gji3"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function r(){return e.apply(this,arguments)}return r}()}),previewerProps:{sources:{_:{tsx:c}},dependencies:{antd:{version:"4.16.0",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},"@medisys/test":{version:"0.1.98"},"@medisys/component":{version:"0.1.163"},"react-dom":{version:">=16.9.0"}},title:"Basic usage",description:'<div class="markdown"><p>Basic usage example.</p></div>',identifier:"button-button"}},"button-progress-button":{component:Object(s["dynamic"])({loader:function(){var e=Object(t["a"])(a.a.mark((function e(){return a.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([n.e(1),n.e(3),n.e(5),n.e(26),n.e(7)]).then(n.bind(null,"AFav"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function r(){return e.apply(this,arguments)}return r}()}),previewerProps:{sources:{_:{tsx:d}},dependencies:{react:{version:">=17.0.0"},"@medisys/utils":{version:"0.1.163"},"@medisys/component":{version:"0.1.163"},"react-dom":{version:">=17.0.0"}},title:"Auto disable on async call",description:'<div class="markdown"><p>To auto enable/disable button, subscribe to model by setting the <code>mode</code> property on the Button.</p></div>',identifier:"button-progress-button"}},"component-data-source":{component:Object(s["dynamic"])({loader:function(){var e=Object(t["a"])(a.a.mark((function e(){return a.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([n.e(1),n.e(5),n.e(25),n.e(6)]).then(n.bind(null,"fEj9"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function r(){return e.apply(this,arguments)}return r}()}),previewerProps:{sources:{_:{tsx:l}},dependencies:{react:{version:">=17.0.0"},"@medisys/component":{version:"0.1.163"},"@medisys/utils":{version:"0.1.163"},"react-dom":{version:">=17.0.0"}},componentName:"data-source",title:"Update DataSource",description:'<div class="markdown"><p>use <code>MIConfig</code> to update dataSource</p></div>',identifier:"component-data-source"}},"data-source-list":{component:Object(s["dynamic"])({loader:function(){var e=Object(t["a"])(a.a.mark((function e(){return a.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([n.e(1),n.e(5),n.e(25),n.e(6)]).then(n.bind(null,"YWjI"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function r(){return e.apply(this,arguments)}return r}()}),previewerProps:{sources:{_:{tsx:u}},dependencies:{antd:{version:"4.16.0",css:"antd/dist/antd.css"},react:{version:">=17.0.0"},"@medisys/component":{version:"0.1.163"},"react-dom":{version:">=17.0.0"}},componentName:"data-source",title:"Update DataSource",description:'<div class="markdown"><p>use <code>MIConfig</code> to update dataSource</p></div>',identifier:"data-source-list"}},"date-picker-range-picker":{component:Object(s["dynamic"])({loader:function(){var e=Object(t["a"])(a.a.mark((function e(){return a.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([n.e(1),n.e(3),n.e(5),n.e(26),n.e(7)]).then(n.bind(null,"JH3V"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function r(){return e.apply(this,arguments)}return r}()}),previewerProps:{sources:{_:{tsx:m}},dependencies:{antd:{version:"4.16.0",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},moment:{version:"2.29.1"},"@medisys/component":{version:"0.1.163"},"react-dom":{version:">=16.9.0"}},title:"Basic usage",description:'<div class="markdown"><p>Basic usage example.</p></div>',identifier:"date-picker-range-picker"}},"drag-drop-list-basic":{component:Object(s["dynamic"])({loader:function(){var e=Object(t["a"])(a.a.mark((function e(){return a.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([n.e(1),n.e(3),n.e(5),n.e(26),n.e(7)]).then(n.bind(null,"7WgX"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function r(){return e.apply(this,arguments)}return r}()}),previewerProps:{sources:{_:{tsx:p}},dependencies:{antd:{version:"4.16.0",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},"@medisys/component":{version:"0.1.163"},"react-dom":{version:">=16.9.0"}},title:"Basic usage",description:'<div class="markdown"><p>Basic usage example.</p></div>',identifier:"drag-drop-list-basic"}},"firebase-messaging":{component:Object(s["dynamic"])({loader:function(){var e=Object(t["a"])(a.a.mark((function e(){return a.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([n.e(1),n.e(3),n.e(5),n.e(26),n.e(7)]).then(n.bind(null,"KFJW"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function r(){return e.apply(this,arguments)}return r}()}),previewerProps:{sources:{_:{tsx:f}},dependencies:{antd:{version:"4.16.0",css:"antd/dist/antd.css"},react:{version:"^16.8.6 || ^17.0"},"umi-request":{version:"1.3.9"},"@medisys/component":{version:"0.1.163"},"@medisys/notification":{version:"0.1.148"},ahooks:{version:"2.10.4"},"react-dom":{version:">=17.0.0"}},title:"Receive messaging from firebase pushing",description:'<div class="markdown"><p>TBD</p></div>',identifier:"firebase-messaging"}},"form-main":{component:Object(s["dynamic"])({loader:function(){var e=Object(t["a"])(a.a.mark((function e(){return a.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([n.e(1),n.e(3),n.e(5),n.e(26),n.e(7)]).then(n.bind(null,"kXXb"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function r(){return e.apply(this,arguments)}return r}()}),previewerProps:{sources:{_:{tsx:v},"basic.tsx":{import:"./basic",content:g},"basic.less":{import:"./basic.less",content:b},"index.less":{import:"./index.less",content:y}},dependencies:{react:{version:">=17.0.0"},"react-router-dom":{version:"5.2.0"},antd:{version:"4.16.0",css:"antd/dist/antd.css"},"@medisys/component":{version:"0.1.163"},"react-dom":{version:">=17.0.0"}},iframe:"true // Set to a numeric value to control the height of the iframe",title:"Dirty Check Form",description:'<div class="markdown"><p>Form have dirty field checking prompt</p></div>',identifier:"form-main"}},"form-modal":{component:Object(s["dynamic"])({loader:function(){var e=Object(t["a"])(a.a.mark((function e(){return a.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([n.e(1),n.e(3),n.e(5),n.e(26),n.e(7)]).then(n.bind(null,"VNtw"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function r(){return e.apply(this,arguments)}return r}()}),previewerProps:{sources:{_:{tsx:h},"basic.tsx":{import:"./basic",content:g},"basic.less":{import:"./basic.less",content:b}},dependencies:{react:{version:">=17.0.0"},"@medisys/component":{version:"0.1.163"},ahooks:{version:"2.10.4"},"react-dom":{version:">=17.0.0"},antd:{version:"4.16.0",css:"antd/dist/antd.css"}},title:"Form inside Modal",description:'<div class="markdown"><p>If there is a Form component inside Modal, auto dirty check when close Modal</p></div>',identifier:"form-modal"}},"input-basic":{component:Object(s["dynamic"])({loader:function(){var e=Object(t["a"])(a.a.mark((function e(){return a.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([n.e(1),n.e(3),n.e(5),n.e(26),n.e(7)]).then(n.bind(null,"lIp6"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function r(){return e.apply(this,arguments)}return r}()}),previewerProps:{sources:{_:{tsx:C}},dependencies:{react:{version:">=17.0.0"},"@medisys/component":{version:"0.1.163"},"react-dom":{version:">=17.0.0"}},title:"Basic usage",description:'<div class="markdown"><ul>\n<li></li>\n</ul></div>',identifier:"input-basic"}},"input-proinput":{component:Object(s["dynamic"])({loader:function(){var e=Object(t["a"])(a.a.mark((function e(){return a.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([n.e(1),n.e(3),n.e(5),n.e(26),n.e(7)]).then(n.bind(null,"xUHi"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function r(){return e.apply(this,arguments)}return r}()}),previewerProps:{sources:{_:{tsx:I}},dependencies:{antd:{version:"4.16.0",css:"antd/dist/antd.css"},react:{version:">=17.0.0"},"@medisys/component":{version:"0.1.163"},"react-dom":{version:">=17.0.0"}},title:"Pro Input usage",description:'<div class="markdown"><p>Pro version with field</p></div>',identifier:"input-proinput"}},"modal-modal":{component:Object(s["dynamic"])({loader:function(){var e=Object(t["a"])(a.a.mark((function e(){return a.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([n.e(1),n.e(3),n.e(5),n.e(26),n.e(7)]).then(n.bind(null,"enQO"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function r(){return e.apply(this,arguments)}return r}()}),previewerProps:{sources:{_:{tsx:k}},dependencies:{antd:{version:"4.16.0",css:"antd/dist/antd.css"},react:{version:"^16.8.6 || ^17.0"},"@medisys/component":{version:"0.1.163"},"@medisys/utils":{version:"0.1.163"},ahooks:{version:"2.10.4"},"react-dom":{version:">=17.0.0"}},title:"Toggle loading based on state update",description:'<div class="markdown"><p>use <code>model</code> to auto trigger loading block</p></div>',identifier:"modal-modal"}},"table-basic":{component:Object(s["dynamic"])({loader:function(){var e=Object(t["a"])(a.a.mark((function e(){return a.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([n.e(1),n.e(3),n.e(5),n.e(26),n.e(7)]).then(n.bind(null,"BDqc"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function r(){return e.apply(this,arguments)}return r}()}),previewerProps:{sources:{_:{tsx:T},"utils.ts":{import:"./utils",content:w},"src/data/index.tsx":{import:"../../../src/data",content:x},"list.tsx":{import:"./list",content:F}},dependencies:{react:{version:">=16.9.0"},"@medisys/component":{version:"0.1.163"},antd:{version:"4.16.0",css:"antd/dist/antd.css"},"react-dom":{version:">=16.9.0"}},title:"Basic usage",description:'<div class="markdown"><p>Default use with local data</p></div>',identifier:"table-basic"}},"table-usewithmodel":{component:Object(s["dynamic"])({loader:function(){var e=Object(t["a"])(a.a.mark((function e(){return a.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([n.e(1),n.e(3),n.e(5),n.e(26),n.e(7)]).then(n.bind(null,"Mk8K"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function r(){return e.apply(this,arguments)}return r}()}),previewerProps:{sources:{_:{tsx:R},"utils.ts":{import:"./utils",content:w}},dependencies:{react:{version:">=16.9.0"},dumi:{version:"1.1.18"},"@medisys/component":{version:"0.1.163"},"@medisys/utils":{version:"0.1.163"},antd:{version:"4.16.0",css:"antd/dist/antd.css"},"react-dom":{version:">=16.9.0"}},title:"Use with useModel",description:'<div class="markdown"><p>Integrate with umi useModel function</p></div>',identifier:"table-usewithmodel"}}}},TIsu:function(e,r,n){},x2v5:function(e){e.exports=JSON.parse("{}")}}]);